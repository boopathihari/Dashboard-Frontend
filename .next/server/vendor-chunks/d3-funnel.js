/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/d3-funnel";
exports.ids = ["vendor-chunks/d3-funnel"];
exports.modules = {

/***/ "(ssr)/./node_modules/d3-funnel/dist/d3-funnel.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-funnel/dist/d3-funnel.js ***!
  \**************************************************/
/***/ ((module) => {

eval("(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse {}\n})(self, function() {\nreturn /******/ (function() { // webpackBootstrap\n/******/ \tvar __webpack_modules__ = ([\n/* 0 */\n/***/ (function(module, __unused_webpack_exports, __nested_webpack_require_509__) {\n\n// Export default to provide support for non-ES6 solutions\nmodule.exports = __nested_webpack_require_509__(1)[\"default\"];\n\n/***/ }),\n/* 1 */\n/***/ (function(__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_725__) {\n\n\"use strict\";\n__nested_webpack_require_725__.r(__nested_webpack_exports__);\n/* harmony import */ var d3_ease__WEBPACK_IMPORTED_MODULE_7__ = __nested_webpack_require_725__(99);\n/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_10__ = __nested_webpack_require_725__(105);\n/* harmony import */ var d3_scale__WEBPACK_IMPORTED_MODULE_8__ = __nested_webpack_require_725__(100);\n/* harmony import */ var d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_9__ = __nested_webpack_require_725__(103);\n/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_725__(96);\n/* harmony import */ var d3_transition__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_725__(2);\n/* harmony import */ var nanoid__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_725__(97);\n/* harmony import */ var _Colorizer__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_725__(92);\n/* harmony import */ var _Formatter__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_725__(93);\n/* harmony import */ var _Navigator__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_725__(94);\n/* harmony import */ var _Utils__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_725__(95);\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar D3Funnel = /*#__PURE__*/function () {\n  /**\n   * @param {string|HTMLElement} selector A selector for the container element.\n   *\n   * @return {void}\n   */\n  function D3Funnel(selector) {\n    _classCallCheck(this, D3Funnel);\n\n    this.container = (0,d3_selection__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(selector).node();\n    this.colorizer = new _Colorizer__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n    this.formatter = new _Formatter__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\n    this.navigator = new _Navigator__WEBPACK_IMPORTED_MODULE_3__[\"default\"]();\n    this.id = null; // Bind event handlers\n\n    this.onMouseOver = this.onMouseOver.bind(this);\n    this.onMouseOut = this.onMouseOut.bind(this);\n  }\n  /**\n   * Remove the funnel and its events from the DOM.\n   *\n   * @return {void}\n   */\n\n\n  _createClass(D3Funnel, [{\n    key: \"destroy\",\n    value: function destroy() {\n      var container = (0,d3_selection__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this.container); // D3's remove method appears to be sufficient for removing the events\n\n      container.selectAll('svg').remove(); // Remove other elements from container\n\n      container.selectAll('*').remove(); // Remove inner text from container\n\n      container.text('');\n    }\n    /**\n     * Draw the chart inside the container with the data and configuration\n     * specified. This will remove any previous SVG elements in the container\n     * and draw a new funnel chart on top of it.\n     *\n     * @param {Array}  data    A list of rows containing a category, a count,\n     *                         and optionally a color (in hex).\n     * @param {Object} options An optional configuration object to override\n     *                         defaults. See the docs.\n     *\n     * @return {void}\n     */\n\n  }, {\n    key: \"draw\",\n    value: function draw(data) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.destroy();\n      this.initialize(data, options);\n      this.drawOntoDom();\n    }\n    /**\n     * Initialize and calculate important variables for drawing the chart.\n     *\n     * @param {Array}  data\n     * @param {Object} options\n     *\n     * @return {void}\n     */\n\n  }, {\n    key: \"initialize\",\n    value: function initialize(data, options) {\n      this.validateData(data);\n      var settings = this.getSettings(options);\n      this.id = \"d3-funnel-\".concat((0,nanoid__WEBPACK_IMPORTED_MODULE_6__.nanoid)()); // Set labels\n\n      this.labelFormatter = this.formatter.getFormatter(settings.label.format);\n      this.tooltipFormatter = this.formatter.getFormatter(settings.tooltip.format); // Set color scales\n\n      this.colorizer.setInstanceId(this.id);\n      this.colorizer.setLabelFill(settings.label.fill);\n      this.colorizer.setScale(settings.block.fill.scale); // Initialize funnel chart settings\n\n      this.settings = {\n        width: settings.chart.width,\n        height: settings.chart.height,\n        bottomWidth: settings.chart.width * settings.chart.bottomWidth,\n        bottomPinch: settings.chart.bottomPinch,\n        isInverted: settings.chart.inverted,\n        isCurved: settings.chart.curve.enabled,\n        curveHeight: settings.chart.curve.height,\n        curveShade: settings.chart.curve.shade,\n        addValueOverlay: settings.block.barOverlay,\n        animation: settings.chart.animate,\n        totalCount: settings.chart.totalCount,\n        fillType: settings.block.fill.type,\n        hoverEffects: settings.block.highlight,\n        dynamicHeight: settings.block.dynamicHeight,\n        dynamicSlope: settings.block.dynamicSlope,\n        minHeight: settings.block.minHeight,\n        label: settings.label,\n        tooltip: settings.tooltip,\n        onBlockClick: settings.events.click.block\n      };\n      this.setBlocks(data);\n    }\n    /**\n     * @param {Array} data\n     *\n     * @return void\n     */\n\n  }, {\n    key: \"validateData\",\n    value: function validateData(data) {\n      if (Array.isArray(data) === false) {\n        throw new Error('Data must be an array.');\n      }\n\n      if (data.length === 0) {\n        throw new Error('Data array must contain at least one element.');\n      }\n\n      if (_typeof(data[0]) !== 'object') {\n        throw new Error('Data array elements must be an object.');\n      }\n\n      if (Array.isArray(data[0]) && data[0].length < 2 || Array.isArray(data[0]) === false && (data[0].label === undefined || data[0].value === undefined)) {\n        throw new Error('Data array elements must contain a label and value.');\n      }\n    }\n    /**\n     * @param {Object} options\n     *\n     * @return {Object}\n     */\n\n  }, {\n    key: \"getSettings\",\n    value: function getSettings(options) {\n      var containerDimensions = this.getContainerDimensions();\n      var defaults = this.getDefaultSettings(containerDimensions); // Prepare the configuration settings based on the defaults\n\n      var settings = _Utils__WEBPACK_IMPORTED_MODULE_4__[\"default\"].extend({}, defaults); // Override default settings with user options\n\n      settings = _Utils__WEBPACK_IMPORTED_MODULE_4__[\"default\"].extend(settings, options); // Account for any percentage-based dimensions\n\n      settings.chart = _objectSpread(_objectSpread({}, settings.chart), this.castDimensions(settings, containerDimensions));\n      return settings;\n    }\n    /**\n     * Return default settings.\n     *\n     * @param {Object} containerDimensions\n     *\n     * @return {Object}\n     */\n\n  }, {\n    key: \"getDefaultSettings\",\n    value: function getDefaultSettings(containerDimensions) {\n      var settings = D3Funnel.defaults; // Set the default width and height based on the container\n\n      settings.chart = _objectSpread(_objectSpread({}, settings.chart), containerDimensions);\n      return settings;\n    }\n    /**\n     * Get the width/height dimensions of the container.\n     *\n     * @return {{width: Number, height: Number}}\n     */\n\n  }, {\n    key: \"getContainerDimensions\",\n    value: function getContainerDimensions() {\n      var dimensions = {\n        width: parseFloat((0,d3_selection__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this.container).style('width')),\n        height: parseFloat((0,d3_selection__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this.container).style('height'))\n      }; // Remove container dimensions that resolve to zero\n\n      ['width', 'height'].forEach(function (direction) {\n        if (dimensions[direction] === 0) {\n          delete dimensions[direction];\n        }\n      });\n      return dimensions;\n    }\n    /**\n     * Cast dimensions into tangible or meaningful numbers.\n     *\n     * @param {Object} chart\n     * @param {Object} containerDimensions\n     *\n     * @return {{width: Number, height: Number}}\n     */\n\n  }, {\n    key: \"castDimensions\",\n    value: function castDimensions(_ref, containerDimensions) {\n      var chart = _ref.chart;\n      var dimensions = {};\n      Object.keys(containerDimensions).forEach(function (direction) {\n        var chartDimension = chart[direction];\n        var containerDimension = containerDimensions[direction];\n\n        if (/%$/.test(String(chartDimension))) {\n          // Convert string into a percentage of the container\n          dimensions[direction] = parseFloat(chartDimension) / 100 * containerDimension;\n        } else if (chartDimension <= 0) {\n          // If case of non-positive number, set to a usable number\n          dimensions[direction] = D3Funnel.defaults.chart[direction];\n        } else {\n          dimensions[direction] = chartDimension;\n        }\n      });\n      return dimensions;\n    }\n    /**\n     * Register the raw data into a standard block format and pre-calculate\n     * some values.\n     *\n     * @param {Array} data\n     *\n     * @return void\n     */\n\n  }, {\n    key: \"setBlocks\",\n    value: function setBlocks(data) {\n      var totalCount = this.getTotalCount(data);\n      this.blocks = this.standardizeData(data, totalCount);\n    }\n    /**\n     * Return the total count of all blocks.\n     *\n     * @param {Array} data\n     *\n     * @return {Number}\n     */\n\n  }, {\n    key: \"getTotalCount\",\n    value: function getTotalCount(data) {\n      if (this.settings.totalCount !== null) {\n        return this.settings.totalCount || 0;\n      }\n\n      return data.reduce(function (a, b) {\n        return a + _Utils__WEBPACK_IMPORTED_MODULE_4__[\"default\"].getRawBlockCount(b);\n      }, 0);\n    }\n    /**\n     * Convert the raw data into a standardized format.\n     *\n     * @param {Array}  data\n     * @param {Number} totalCount\n     *\n     * @return {Array}\n     */\n\n  }, {\n    key: \"standardizeData\",\n    value: function standardizeData(data, totalCount) {\n      var _this = this;\n\n      return data.map(function (rawBlock, index) {\n        var block = Array.isArray(rawBlock) ? _Utils__WEBPACK_IMPORTED_MODULE_4__[\"default\"].convertLegacyBlock(rawBlock) : rawBlock;\n        var ratio = totalCount > 0 ? block.value / totalCount || 0 : 1 / data.length;\n        return {\n          index: index,\n          ratio: ratio,\n          value: block.value,\n          height: _this.settings.height * ratio,\n          fill: _this.colorizer.getBlockFill(block.backgroundColor, index, _this.settings.fillType),\n          label: {\n            enabled: !block.hideLabel,\n            raw: block.label,\n            formatted: _this.formatter.format(block, _this.labelFormatter),\n            color: _this.colorizer.getLabelColor(block.labelColor)\n          },\n          tooltip: {\n            enabled: block.enabled,\n            formatted: _this.formatter.format(block, _this.tooltipFormatter)\n          }\n        };\n      });\n    }\n    /**\n     * Draw the chart onto the DOM.\n     *\n     * @return {void}\n     */\n\n  }, {\n    key: \"drawOntoDom\",\n    value: function drawOntoDom() {\n      // Add the SVG\n      this.svg = (0,d3_selection__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this.container).append('svg').attr('id', this.id).attr('width', this.settings.width).attr('height', this.settings.height);\n\n      var _this$makePaths = this.makePaths();\n\n      var _this$makePaths2 = _slicedToArray(_this$makePaths, 2);\n\n      this.blockPaths = _this$makePaths2[0];\n      this.overlayPaths = _this$makePaths2[1];\n\n      // Define color gradients\n      if (this.settings.fillType === 'gradient') {\n        this.defineColorGradients(this.svg);\n      } // Add top oval if curved\n\n\n      if (this.settings.isCurved) {\n        this.drawTopOval(this.svg, this.blockPaths);\n      } // Add each block\n\n\n      this.drawBlock(0);\n    }\n    /**\n     * Create the paths to be used to define the discrete funnel blocks and\n     * returns the results in an array.\n     *\n     * @return {Array, Array}\n     */\n\n  }, {\n    key: \"makePaths\",\n    value: function makePaths() {\n      var _this2 = this;\n\n      // Calculate the important fixed positions\n      var bottomLeftX = (this.settings.width - this.settings.bottomWidth) / 2;\n      var centerX = this.settings.width / 2;\n      var paths = [];\n      var overlayPaths = []; // Calculate change in x, y direction\n\n      this.dx = this.getDx(bottomLeftX);\n      this.dy = this.getDy(); // Initialize velocity\n\n      var dx = this.dx,\n          dy = this.dy; // Initialize starting positions\n\n      var prevLeftX = 0;\n      var prevRightX = this.settings.width;\n      var prevHeight = 0; // Start from the bottom for inverted\n\n      if (this.settings.isInverted) {\n        prevLeftX = bottomLeftX;\n        prevRightX = this.settings.width - bottomLeftX;\n      } // Initialize next positions\n\n\n      var nextLeftX = 0;\n      var nextRightX = 0;\n      var nextHeight = 0; // Move down if there is an initial curve\n\n      if (this.settings.isCurved) {\n        prevHeight = this.settings.curveHeight / 2;\n      }\n\n      var totalHeight = this.settings.height; // This is greedy in that the block will have a guaranteed height\n      // and the remaining is shared among the ratio, instead of being\n      // shared according to the remaining minus the guaranteed\n\n      if (this.settings.minHeight !== 0) {\n        totalHeight = this.settings.height - this.settings.minHeight * this.blocks.length;\n      }\n\n      var slopeHeight = this.settings.height; // Correct slope height if there are blocks being pinched (and thus\n      // requiring a sharper curve)\n\n      if (this.settings.bottomPinch > 0) {\n        this.blocks.forEach(function (block, i) {\n          var height = totalHeight * block.ratio; // Add greedy minimum height\n\n          if (_this2.settings.minHeight !== 0) {\n            height += _this2.settings.minHeight;\n          } // Account for any curvature\n\n\n          if (_this2.settings.isCurved) {\n            height += _this2.settings.curveHeight / _this2.blocks.length;\n          }\n\n          if (_this2.settings.isInverted) {\n            if (i < _this2.settings.bottomPinch) {\n              slopeHeight -= height;\n            }\n          } else if (i >= _this2.blocks.length - _this2.settings.bottomPinch) {\n            slopeHeight -= height;\n          }\n        });\n      } // The slope will determine the x points on each block iteration\n      // Given: slope = (y1 - y2) / (x1 - x2)\n      // (x1, y1) = (bottomLeftX, height)\n      // (x2, y2) = (0, 0)\n\n\n      var slope = slopeHeight / bottomLeftX; // Create the path definition for each funnel block\n      // Remember to loop back to the beginning point for a closed path\n\n      this.blocks.forEach(function (block, i) {\n        // Make heights proportional to block weight\n        if (_this2.settings.dynamicHeight) {\n          // Slice off the height proportional to this block\n          dy = totalHeight * block.ratio; // Add greedy minimum height\n\n          if (_this2.settings.minHeight !== 0) {\n            dy += _this2.settings.minHeight;\n          } // Account for any curvature\n\n\n          if (_this2.settings.isCurved) {\n            dy -= _this2.settings.curveHeight / _this2.blocks.length;\n          } // Given: y = mx + b\n          // Given: b = 0 (when funnel), b = this.settings.height (when pyramid)\n          // For funnel, x_i = y_i / slope\n\n\n          nextLeftX = (prevHeight + dy) / slope; // For pyramid, x_i = y_i - this.settings.height / -slope\n\n          if (_this2.settings.isInverted) {\n            nextLeftX = (prevHeight + dy - _this2.settings.height) / (-1 * slope);\n          } // If bottomWidth is 0, adjust last x position (to circumvent\n          // errors associated with rounding)\n\n\n          if (_this2.settings.bottomWidth === 0 && i === _this2.blocks.length - 1) {\n            // For funnel, last position is the center\n            nextLeftX = _this2.settings.width / 2; // For pyramid, last position is the origin\n\n            if (_this2.settings.isInverted) {\n              nextLeftX = 0;\n            }\n          } // If bottomWidth is same as width, stop x velocity\n\n\n          if (_this2.settings.bottomWidth === _this2.settings.width) {\n            nextLeftX = prevLeftX;\n          } // Prevent NaN or Infinite values (caused by zero heights)\n\n\n          if (Number.isNaN(nextLeftX) || !Number.isFinite(nextLeftX)) {\n            nextLeftX = 0;\n          } // Calculate the shift necessary for both x points\n\n\n          dx = nextLeftX - prevLeftX;\n\n          if (_this2.settings.isInverted) {\n            dx = prevLeftX - nextLeftX;\n          }\n        } // Make slope width proportional to change in block value\n\n\n        if (_this2.settings.dynamicSlope && !_this2.settings.isInverted) {\n          var nextBlockValue = _this2.blocks[i + 1] ? _this2.blocks[i + 1].value : block.value;\n          var widthRatio = nextBlockValue / block.value;\n          dx = (1 - widthRatio) * (centerX - prevLeftX);\n        } // Stop velocity for pinched blocks\n\n\n        if (_this2.settings.bottomPinch > 0) {\n          // Check if we've reached the bottom of the pinch\n          // If so, stop changing on x\n          if (!_this2.settings.isInverted) {\n            if (i >= _this2.blocks.length - _this2.settings.bottomPinch) {\n              dx = 0;\n            } // Pinch at the first blocks relating to the bottom pinch\n            // Revert back to normal velocity after pinch\n\n          } else {\n            // Revert velocity back to the initial if we are using\n            // static heights (prevents zero velocity if isInverted\n            // and bottomPinch are non trivial and dynamicHeight is\n            // false)\n            if (!_this2.settings.dynamicHeight) {\n              dx = _this2.dx;\n            }\n\n            dx = i < _this2.settings.bottomPinch ? 0 : dx;\n          }\n        } // Calculate the position of next block\n\n\n        nextLeftX = prevLeftX + dx;\n        nextRightX = prevRightX - dx;\n        nextHeight = prevHeight + dy;\n        _this2.blocks[i].height = dy; // Expand outward if inverted\n\n        if (_this2.settings.isInverted) {\n          nextLeftX = prevLeftX - dx;\n          nextRightX = prevRightX + dx;\n        }\n\n        var dimensions = {\n          centerX: centerX,\n          prevLeftX: prevLeftX,\n          prevRightX: prevRightX,\n          prevHeight: prevHeight,\n          nextLeftX: nextLeftX,\n          nextRightX: nextRightX,\n          nextHeight: nextHeight,\n          curveHeight: _this2.settings.curveHeight,\n          ratio: block.ratio\n        };\n\n        if (_this2.settings.isCurved) {\n          paths = [].concat(_toConsumableArray(paths), [_this2.navigator.makeCurvedPaths(dimensions)]);\n\n          if (_this2.settings.addValueOverlay) {\n            overlayPaths = [].concat(_toConsumableArray(overlayPaths), [_this2.navigator.makeCurvedPaths(dimensions, true)]);\n          }\n        } else {\n          paths = [].concat(_toConsumableArray(paths), [_this2.navigator.makeStraightPaths(dimensions)]);\n\n          if (_this2.settings.addValueOverlay) {\n            overlayPaths = [].concat(_toConsumableArray(overlayPaths), [_this2.navigator.makeStraightPaths(dimensions, true)]);\n          }\n        } // Set the next block's previous position\n\n\n        prevLeftX = nextLeftX;\n        prevRightX = nextRightX;\n        prevHeight = nextHeight;\n      });\n      return [paths, overlayPaths];\n    }\n    /**\n     * @param {Number} bottomLeftX\n     *\n     * @return {Number}\n     */\n\n  }, {\n    key: \"getDx\",\n    value: function getDx(bottomLeftX) {\n      // Will be sharper if there is a pinch\n      if (this.settings.bottomPinch > 0) {\n        return bottomLeftX / (this.blocks.length - this.settings.bottomPinch);\n      }\n\n      return bottomLeftX / this.blocks.length;\n    }\n    /**\n     * @return {Number}\n     */\n\n  }, {\n    key: \"getDy\",\n    value: function getDy() {\n      // Curved chart needs reserved pixels to account for curvature\n      if (this.settings.isCurved) {\n        return (this.settings.height - this.settings.curveHeight) / this.blocks.length;\n      }\n\n      return this.settings.height / this.blocks.length;\n    }\n    /**\n     * Define the linear color gradients.\n     *\n     * @param {Object} svg\n     *\n     * @return {void}\n     */\n\n  }, {\n    key: \"defineColorGradients\",\n    value: function defineColorGradients(svg) {\n      var _this3 = this;\n\n      var defs = svg.append('defs'); // Create a gradient for each block\n\n      this.blocks.forEach(function (block, index) {\n        var color = block.fill.raw;\n\n        var shade = _this3.colorizer.shade(color, -0.2); // Create linear gradient\n\n\n        var gradient = defs.append('linearGradient').attr('id', _this3.colorizer.getGradientId(index)); // Define the gradient stops\n\n        var stops = [[0, shade], [40, color], [60, color], [100, shade]]; // Add the gradient stops\n\n        stops.forEach(function (stop) {\n          gradient.append('stop').attr('offset', \"\".concat(stop[0], \"%\")).attr('style', \"stop-color: \".concat(stop[1]));\n        });\n      });\n    }\n    /**\n     * Draw the top oval of a curved funnel.\n     *\n     * @param {Object} svg\n     * @param {Array}  blockPaths\n     *\n     * @return {void}\n     */\n\n  }, {\n    key: \"drawTopOval\",\n    value: function drawTopOval(svg, blockPaths) {\n      var centerX = this.settings.width / 2; // Create path from top-most block\n\n      var paths = blockPaths[0];\n      var topCurve = paths[1][1] + this.settings.curveHeight / 2;\n      var path = this.navigator.plot([['M', paths[0][0], paths[0][1]], ['Q', centerX, topCurve], [' ', paths[2][0], paths[2][1]], ['M', paths[2][0], this.settings.curveHeight / 2], ['Q', centerX, 0], [' ', paths[0][0], this.settings.curveHeight / 2]]); // Draw top oval\n\n      svg.append('path').attr('fill', this.colorizer.shade(this.blocks[0].fill.raw, this.settings.curveShade)).attr('d', path);\n    }\n    /**\n     * Draw the next block in the iteration.\n     *\n     * @param {int} index\n     *\n     * @return {void}\n     */\n\n  }, {\n    key: \"drawBlock\",\n    value: function drawBlock(index) {\n      var _this4 = this;\n\n      if (index === this.blocks.length) {\n        return;\n      } // Create a group just for this block\n\n\n      var group = this.svg.append('g');\n      var block = this.blocks[index]; // Fetch path element\n\n      var path = this.getBlockPath(group, index); // Attach data to the element\n\n      this.attachData(path, block);\n      var overlayPath = null;\n      var pathColor = block.fill.actual;\n\n      if (this.settings.addValueOverlay) {\n        overlayPath = this.getOverlayPath(group, index);\n        this.attachData(overlayPath, block); // Add data attribute to distinguish between paths\n\n        path.node().setAttribute('pathType', 'background');\n        overlayPath.node().setAttribute('pathType', 'foreground'); // Default path becomes background of lighter shade\n\n        pathColor = this.colorizer.shade(block.fill.raw, 0.3);\n      } // Add animation components\n\n\n      if (this.settings.animation !== 0) {\n        path.transition().duration(this.settings.animation).ease(d3_ease__WEBPACK_IMPORTED_MODULE_7__.linear).attr('fill', pathColor).attr('d', this.getPathDefinition(index)).on('end', function () {\n          _this4.drawBlock(index + 1);\n        });\n      } else {\n        path.attr('fill', pathColor).attr('d', this.getPathDefinition(index));\n        this.drawBlock(index + 1);\n      } // Add path overlay\n\n\n      if (this.settings.addValueOverlay) {\n        path.attr('stroke', this.blocks[index].fill.raw);\n\n        if (this.settings.animation !== 0) {\n          overlayPath.transition().duration(this.settings.animation).ease(d3_ease__WEBPACK_IMPORTED_MODULE_7__.linear).attr('fill', block.fill.actual).attr('d', this.getOverlayPathDefinition(index));\n        } else {\n          overlayPath.attr('fill', block.fill.actual).attr('d', this.getOverlayPathDefinition(index));\n        }\n      } // Add the hover events\n\n\n      if (this.settings.hoverEffects) {\n        [path, overlayPath].forEach(function (target) {\n          if (!target) {\n            return;\n          }\n\n          target.on('mouseover', _this4.onMouseOver).on('mouseout', _this4.onMouseOut);\n        });\n      } // Add block click event\n\n\n      if (this.settings.onBlockClick !== null) {\n        [path, overlayPath].forEach(function (target) {\n          if (!target) {\n            return;\n          }\n\n          target.style('cursor', 'pointer').on('click', _this4.settings.onBlockClick);\n        });\n      } // Add tooltips\n\n\n      if (this.settings.tooltip.enabled) {\n        [path, overlayPath].forEach(function (target) {\n          if (!target) {\n            return;\n          }\n\n          target.node().addEventListener('mouseout', function () {\n            if (_this4.tooltip) {\n              _this4.container.removeChild(_this4.tooltip);\n\n              _this4.tooltip = null;\n            }\n          });\n          target.node().addEventListener('mousemove', function (e) {\n            if (!_this4.tooltip) {\n              _this4.tooltip = document.createElement('div');\n\n              _this4.tooltip.setAttribute('class', 'd3-funnel-tooltip');\n\n              _this4.container.appendChild(_this4.tooltip);\n            }\n\n            _this4.tooltip.innerText = block.tooltip.formatted;\n            var width = _this4.tooltip.offsetWidth;\n            var height = _this4.tooltip.offsetHeight;\n\n            var rect = _this4.container.getBoundingClientRect();\n\n            var heightOffset = height + 5;\n            var containerY = rect.y + window.scrollY;\n            var isAbove = e.pageY - heightOffset < containerY;\n            var top = isAbove ? e.pageY + 5 : e.pageY - heightOffset;\n            var styles = ['display: inline-block', 'position: absolute', \"left: \".concat(e.pageX - width / 2, \"px\"), \"top: \".concat(top, \"px\"), \"border: 1px solid \".concat(block.fill.raw), 'background: rgb(255,255,255,0.75)', 'padding: 5px 15px', 'color: #000', 'font-size: 14px', 'font-weight: bold', 'text-align: center', 'cursor: default', 'pointer-events: none'];\n\n            _this4.tooltip.setAttribute('style', styles.join(';'));\n          });\n        });\n      }\n\n      if (this.settings.label.enabled && block.label.enabled) {\n        this.addBlockLabel(group, index);\n      }\n    }\n    /**\n     * @param {Object} group\n     * @param {int}    index\n     *\n     * @return {Object}\n     */\n\n  }, {\n    key: \"getBlockPath\",\n    value: function getBlockPath(group, index) {\n      var path = group.append('path');\n\n      if (this.settings.animation !== 0) {\n        this.addBeforeTransition(path, index, false);\n      }\n\n      return path;\n    }\n    /**\n     * @param {Object} group\n     * @param {int}    index\n     *\n     * @return {Object}\n     */\n\n  }, {\n    key: \"getOverlayPath\",\n    value: function getOverlayPath(group, index) {\n      var path = group.append('path');\n\n      if (this.settings.animation !== 0) {\n        this.addBeforeTransition(path, index, true);\n      }\n\n      return path;\n    }\n    /**\n     * Set the attributes of a path element before its animation.\n     *\n     * @param {Object}  path\n     * @param {int}     index\n     * @param {boolean} isOverlay\n     *\n     * @return {void}\n     */\n\n  }, {\n    key: \"addBeforeTransition\",\n    value: function addBeforeTransition(path, index, isOverlay) {\n      var paths = isOverlay ? this.overlayPaths[index] : this.blockPaths[index];\n      var beforePath = '';\n      var beforeFill = ''; // Construct the top of the trapezoid and leave the other elements\n      // hovering around to expand downward on animation\n\n      if (!this.settings.isCurved) {\n        beforePath = this.navigator.plot([['M', paths[0][0], paths[0][1]], ['L', paths[1][0], paths[1][1]], ['L', paths[1][0], paths[1][1]], ['L', paths[0][0], paths[0][1]]]);\n      } else {\n        beforePath = this.navigator.plot([['M', paths[0][0], paths[0][1]], ['Q', paths[1][0], paths[1][1]], [' ', paths[2][0], paths[2][1]], ['L', paths[2][0], paths[2][1]], ['M', paths[2][0], paths[2][1]], ['Q', paths[1][0], paths[1][1]], [' ', paths[0][0], paths[0][1]]]);\n      } // Use previous fill color, if available\n\n\n      if (this.settings.fillType === 'solid' && index > 0) {\n        beforeFill = this.blocks[index - 1].fill.actual; // Otherwise use current background\n      } else {\n        beforeFill = this.blocks[index].fill.actual;\n      }\n\n      path.attr('d', beforePath).attr('fill', beforeFill);\n    }\n    /**\n     * Attach data to the target element. Also attach the current node to the\n     * data object.\n     *\n     * @param {Object} element\n     * @param {Object} data\n     *\n     * @return {void}\n     */\n\n  }, {\n    key: \"attachData\",\n    value: function attachData(element, data) {\n      var nodeData = _objectSpread(_objectSpread({}, data), {}, {\n        node: element.node()\n      });\n\n      element.data([nodeData]);\n    }\n    /**\n     * @param {int} index\n     *\n     * @return {string}\n     */\n\n  }, {\n    key: \"getPathDefinition\",\n    value: function getPathDefinition(index) {\n      var commands = [];\n      this.blockPaths[index].forEach(function (command) {\n        commands.push([command[2], command[0], command[1]]);\n      });\n      return this.navigator.plot(commands);\n    }\n    /**\n     * @param {int} index\n     *\n     * @return {string}\n     */\n\n  }, {\n    key: \"getOverlayPathDefinition\",\n    value: function getOverlayPathDefinition(index) {\n      var commands = [];\n      this.overlayPaths[index].forEach(function (command) {\n        commands.push([command[2], command[0], command[1]]);\n      });\n      return this.navigator.plot(commands);\n    }\n    /**\n     * @param {Object} event\n     * @param {Object} data\n     *\n     * @return {void}\n     */\n\n  }, {\n    key: \"onMouseOver\",\n    value: function onMouseOver(event, data) {\n      var _this5 = this;\n\n      var children = event.target.parentElement.childNodes; // Highlight all paths within one block\n\n      _toConsumableArray(children).forEach(function (node) {\n        if (node.nodeName.toLowerCase() === 'path') {\n          var type = node.getAttribute('pathType') || '';\n\n          if (type === 'foreground') {\n            (0,d3_selection__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(node).attr('fill', _this5.colorizer.shade(data.fill.raw, -0.5));\n          } else {\n            (0,d3_selection__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(node).attr('fill', _this5.colorizer.shade(data.fill.raw, -0.2));\n          }\n        }\n      });\n    }\n    /**\n     * @param {Object} event\n     * @param {Object} data\n     *\n     * @return {void}\n     */\n\n  }, {\n    key: \"onMouseOut\",\n    value: function onMouseOut(event, data) {\n      var _this6 = this;\n\n      var children = event.target.parentElement.childNodes; // Restore original color for all paths of a block\n\n      _toConsumableArray(children).forEach(function (node) {\n        if (node.nodeName.toLowerCase() === 'path') {\n          var type = node.getAttribute('pathType') || '';\n\n          if (type === 'background') {\n            var backgroundColor = _this6.colorizer.shade(data.fill.raw, 0.3);\n\n            (0,d3_selection__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(node).attr('fill', backgroundColor);\n          } else {\n            (0,d3_selection__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(node).attr('fill', data.fill.actual);\n          }\n        }\n      });\n    }\n    /**\n     * @param {Object} group\n     * @param {int}    index\n     *\n     * @return {void}\n     */\n\n  }, {\n    key: \"addBlockLabel\",\n    value: function addBlockLabel(group, index) {\n      var paths = this.blockPaths[index];\n      var formattedLabel = this.blocks[index].label.formatted;\n      var fill = this.blocks[index].label.color; // Center the text\n\n      var x = this.settings.width / 2;\n      var y = this.getTextY(paths);\n      var text = group.append('text').attr('x', x).attr('y', y).attr('fill', fill).attr('font-size', this.settings.label.fontSize).attr('text-anchor', 'middle').attr('dominant-baseline', 'middle').attr('pointer-events', 'none'); // Add font-family, if exists\n\n      if (this.settings.label.fontFamily !== null) {\n        text.attr('font-family', this.settings.label.fontFamily);\n      }\n\n      this.addLabelLines(text, formattedLabel, x);\n    }\n    /**\n     * Add <tspan> elements for each line of the formatted label.\n     *\n     * @param {Object} text\n     * @param {String} formattedLabel\n     * @param {Number} x\n     *\n     * @return {void}\n     */\n\n  }, {\n    key: \"addLabelLines\",\n    value: function addLabelLines(text, formattedLabel, x) {\n      var lines = formattedLabel.split('\\n');\n      var lineHeight = 20; // dy will signify the change from the initial height y\n      // We need to initially start the first line at the very top, factoring\n      // in the other number of lines\n\n      var initialDy = -1 * lineHeight * (lines.length - 1) / 2;\n      lines.forEach(function (line, i) {\n        var dy = i === 0 ? initialDy : lineHeight;\n        text.append('tspan').attr('x', x).attr('dy', dy).text(line);\n      });\n    }\n    /**\n     * Returns the y position of the given label's text. This is determined by\n     * taking the mean of the bases.\n     *\n     * @param {Array} paths\n     *\n     * @return {Number}\n     */\n\n  }, {\n    key: \"getTextY\",\n    value: function getTextY(paths) {\n      var _this$settings = this.settings,\n          isCurved = _this$settings.isCurved,\n          curveHeight = _this$settings.curveHeight;\n\n      if (isCurved) {\n        return (paths[2][1] + paths[3][1]) / 2 + 1.5 * curveHeight / this.blocks.length;\n      }\n\n      return (paths[1][1] + paths[2][1]) / 2;\n    }\n  }]);\n\n  return D3Funnel;\n}();\n\n_defineProperty(D3Funnel, \"defaults\", {\n  chart: {\n    width: 350,\n    height: 400,\n    bottomWidth: 1 / 3,\n    bottomPinch: 0,\n    inverted: false,\n    horizontal: false,\n    animate: 0,\n    curve: {\n      enabled: false,\n      height: 20,\n      shade: -0.4\n    },\n    totalCount: null\n  },\n  block: {\n    dynamicHeight: false,\n    dynamicSlope: false,\n    barOverlay: false,\n    fill: {\n      scale: (0,d3_scale__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(d3_scale_chromatic__WEBPACK_IMPORTED_MODULE_9__[\"default\"]).domain((0,d3_array__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(0, 10)),\n      type: 'solid'\n    },\n    minHeight: 0,\n    highlight: false\n  },\n  label: {\n    enabled: true,\n    fontFamily: null,\n    fontSize: '14px',\n    fill: '#fff',\n    format: '{l}: {f}'\n  },\n  tooltip: {\n    enabled: false,\n    format: '{l}: {f}'\n  },\n  events: {\n    click: {\n      block: null\n    }\n  }\n});\n\n/* harmony default export */ __nested_webpack_exports__[\"default\"] = (D3Funnel);\n\n/***/ }),\n/* 2 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_39389__) {\n\n\"use strict\";\n__nested_webpack_require_39389__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_39389__.d(__nested_webpack_exports__, {\n/* harmony export */   \"transition\": function() { return /* reexport safe */ _transition_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; },\n/* harmony export */   \"active\": function() { return /* reexport safe */ _active_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]; },\n/* harmony export */   \"interrupt\": function() { return /* reexport safe */ _interrupt_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]; }\n/* harmony export */ });\n/* harmony import */ var _selection_index_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_39389__(3);\n/* harmony import */ var _transition_index_js__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_39389__(57);\n/* harmony import */ var _active_js__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_39389__(91);\n/* harmony import */ var _interrupt_js__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_39389__(50);\n\n\n\n\n\n\n/***/ }),\n/* 3 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_40452__) {\n\n\"use strict\";\n__nested_webpack_require_40452__.r(__nested_webpack_exports__);\n/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_40452__(4);\n/* harmony import */ var _interrupt_js__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_40452__(49);\n/* harmony import */ var _transition_js__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_40452__(55);\n\n\n\n\nd3_selection__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype.interrupt = _interrupt_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\nd3_selection__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype.transition = _transition_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\n\n\n/***/ }),\n/* 4 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_41178__) {\n\n\"use strict\";\n__nested_webpack_require_41178__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_41178__.d(__nested_webpack_exports__, {\n/* harmony export */   \"root\": function() { return /* binding */ root; },\n/* harmony export */   \"Selection\": function() { return /* binding */ Selection; }\n/* harmony export */ });\n/* harmony import */ var _select_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_41178__(5);\n/* harmony import */ var _selectAll_js__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_41178__(7);\n/* harmony import */ var _selectChild_js__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_41178__(10);\n/* harmony import */ var _selectChildren_js__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_41178__(12);\n/* harmony import */ var _filter_js__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_41178__(13);\n/* harmony import */ var _data_js__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_41178__(14);\n/* harmony import */ var _enter_js__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_41178__(15);\n/* harmony import */ var _exit_js__WEBPACK_IMPORTED_MODULE_7__ = __nested_webpack_require_41178__(18);\n/* harmony import */ var _join_js__WEBPACK_IMPORTED_MODULE_8__ = __nested_webpack_require_41178__(19);\n/* harmony import */ var _merge_js__WEBPACK_IMPORTED_MODULE_9__ = __nested_webpack_require_41178__(20);\n/* harmony import */ var _order_js__WEBPACK_IMPORTED_MODULE_10__ = __nested_webpack_require_41178__(21);\n/* harmony import */ var _sort_js__WEBPACK_IMPORTED_MODULE_11__ = __nested_webpack_require_41178__(22);\n/* harmony import */ var _call_js__WEBPACK_IMPORTED_MODULE_12__ = __nested_webpack_require_41178__(23);\n/* harmony import */ var _nodes_js__WEBPACK_IMPORTED_MODULE_13__ = __nested_webpack_require_41178__(24);\n/* harmony import */ var _node_js__WEBPACK_IMPORTED_MODULE_14__ = __nested_webpack_require_41178__(25);\n/* harmony import */ var _size_js__WEBPACK_IMPORTED_MODULE_15__ = __nested_webpack_require_41178__(26);\n/* harmony import */ var _empty_js__WEBPACK_IMPORTED_MODULE_16__ = __nested_webpack_require_41178__(27);\n/* harmony import */ var _each_js__WEBPACK_IMPORTED_MODULE_17__ = __nested_webpack_require_41178__(28);\n/* harmony import */ var _attr_js__WEBPACK_IMPORTED_MODULE_18__ = __nested_webpack_require_41178__(29);\n/* harmony import */ var _style_js__WEBPACK_IMPORTED_MODULE_19__ = __nested_webpack_require_41178__(32);\n/* harmony import */ var _property_js__WEBPACK_IMPORTED_MODULE_20__ = __nested_webpack_require_41178__(34);\n/* harmony import */ var _classed_js__WEBPACK_IMPORTED_MODULE_21__ = __nested_webpack_require_41178__(35);\n/* harmony import */ var _text_js__WEBPACK_IMPORTED_MODULE_22__ = __nested_webpack_require_41178__(36);\n/* harmony import */ var _html_js__WEBPACK_IMPORTED_MODULE_23__ = __nested_webpack_require_41178__(37);\n/* harmony import */ var _raise_js__WEBPACK_IMPORTED_MODULE_24__ = __nested_webpack_require_41178__(38);\n/* harmony import */ var _lower_js__WEBPACK_IMPORTED_MODULE_25__ = __nested_webpack_require_41178__(39);\n/* harmony import */ var _append_js__WEBPACK_IMPORTED_MODULE_26__ = __nested_webpack_require_41178__(40);\n/* harmony import */ var _insert_js__WEBPACK_IMPORTED_MODULE_27__ = __nested_webpack_require_41178__(42);\n/* harmony import */ var _remove_js__WEBPACK_IMPORTED_MODULE_28__ = __nested_webpack_require_41178__(43);\n/* harmony import */ var _clone_js__WEBPACK_IMPORTED_MODULE_29__ = __nested_webpack_require_41178__(44);\n/* harmony import */ var _datum_js__WEBPACK_IMPORTED_MODULE_30__ = __nested_webpack_require_41178__(45);\n/* harmony import */ var _on_js__WEBPACK_IMPORTED_MODULE_31__ = __nested_webpack_require_41178__(46);\n/* harmony import */ var _dispatch_js__WEBPACK_IMPORTED_MODULE_32__ = __nested_webpack_require_41178__(47);\n/* harmony import */ var _iterator_js__WEBPACK_IMPORTED_MODULE_33__ = __nested_webpack_require_41178__(48);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nfunction selection_selection() {\n  return this;\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: _select_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n  selectAll: _selectAll_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  selectChild: _selectChild_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n  selectChildren: _selectChildren_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n  filter: _filter_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n  data: _data_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n  enter: _enter_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"],\n  exit: _exit_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"],\n  join: _join_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"],\n  merge: _merge_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"],\n  selection: selection_selection,\n  order: _order_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"],\n  sort: _sort_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"],\n  call: _call_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"],\n  nodes: _nodes_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"],\n  node: _node_js__WEBPACK_IMPORTED_MODULE_14__[\"default\"],\n  size: _size_js__WEBPACK_IMPORTED_MODULE_15__[\"default\"],\n  empty: _empty_js__WEBPACK_IMPORTED_MODULE_16__[\"default\"],\n  each: _each_js__WEBPACK_IMPORTED_MODULE_17__[\"default\"],\n  attr: _attr_js__WEBPACK_IMPORTED_MODULE_18__[\"default\"],\n  style: _style_js__WEBPACK_IMPORTED_MODULE_19__[\"default\"],\n  property: _property_js__WEBPACK_IMPORTED_MODULE_20__[\"default\"],\n  classed: _classed_js__WEBPACK_IMPORTED_MODULE_21__[\"default\"],\n  text: _text_js__WEBPACK_IMPORTED_MODULE_22__[\"default\"],\n  html: _html_js__WEBPACK_IMPORTED_MODULE_23__[\"default\"],\n  raise: _raise_js__WEBPACK_IMPORTED_MODULE_24__[\"default\"],\n  lower: _lower_js__WEBPACK_IMPORTED_MODULE_25__[\"default\"],\n  append: _append_js__WEBPACK_IMPORTED_MODULE_26__[\"default\"],\n  insert: _insert_js__WEBPACK_IMPORTED_MODULE_27__[\"default\"],\n  remove: _remove_js__WEBPACK_IMPORTED_MODULE_28__[\"default\"],\n  clone: _clone_js__WEBPACK_IMPORTED_MODULE_29__[\"default\"],\n  datum: _datum_js__WEBPACK_IMPORTED_MODULE_30__[\"default\"],\n  on: _on_js__WEBPACK_IMPORTED_MODULE_31__[\"default\"],\n  dispatch: _dispatch_js__WEBPACK_IMPORTED_MODULE_32__[\"default\"],\n  [Symbol.iterator]: _iterator_js__WEBPACK_IMPORTED_MODULE_33__[\"default\"]\n};\n\n/* harmony default export */ __nested_webpack_exports__[\"default\"] = (selection);\n\n\n/***/ }),\n/* 5 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_47323__) {\n\n\"use strict\";\n__nested_webpack_require_47323__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_47323__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_47323__(4);\n/* harmony import */ var _selector_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_47323__(6);\n\n\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(select) {\n  if (typeof select !== \"function\") select = (0,_selector_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new _index_js__WEBPACK_IMPORTED_MODULE_1__.Selection(subgroups, this._parents);\n}\n\n\n/***/ }),\n/* 6 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_48598__) {\n\n\"use strict\";\n__nested_webpack_require_48598__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_48598__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\nfunction none() {}\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n\n\n/***/ }),\n/* 7 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_49171__) {\n\n\"use strict\";\n__nested_webpack_require_49171__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_49171__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_49171__(4);\n/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_49171__(8);\n/* harmony import */ var _selectorAll_js__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_49171__(9);\n\n\n\n\nfunction arrayAll(select) {\n  return function() {\n    return (0,_array_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(select.apply(this, arguments));\n  };\n}\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(select) {\n  if (typeof select === \"function\") select = arrayAll(select);\n  else select = (0,_selectorAll_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new _index_js__WEBPACK_IMPORTED_MODULE_2__.Selection(subgroups, parents);\n}\n\n\n/***/ }),\n/* 8 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_50620__) {\n\n\"use strict\";\n__nested_webpack_require_50620__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_50620__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ array; }\n/* harmony export */ });\n// Given something array like (or null), returns something that is strictly an\n// array. This is used to ensure that array-like objects passed to d3.selectAll\n// or selection.selectAll are converted into proper arrays when creating a\n// selection; we don’t ever want to create a selection backed by a live\n// HTMLCollection or NodeList. However, note that selection.selectAll will use a\n// static NodeList as a group, since it safely derived from querySelectorAll.\nfunction array(x) {\n  return x == null ? [] : Array.isArray(x) ? x : Array.from(x);\n}\n\n\n/***/ }),\n/* 9 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_51515__) {\n\n\"use strict\";\n__nested_webpack_require_51515__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_51515__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\nfunction empty() {\n  return [];\n}\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n\n\n/***/ }),\n/* 10 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_52108__) {\n\n\"use strict\";\n__nested_webpack_require_52108__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_52108__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var _matcher_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_52108__(11);\n\n\nvar find = Array.prototype.find;\n\nfunction childFind(match) {\n  return function() {\n    return find.call(this.children, match);\n  };\n}\n\nfunction childFirst() {\n  return this.firstElementChild;\n}\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(match) {\n  return this.select(match == null ? childFirst\n      : childFind(typeof match === \"function\" ? match : (0,_matcher_js__WEBPACK_IMPORTED_MODULE_0__.childMatcher)(match)));\n}\n\n\n/***/ }),\n/* 11 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_53028__) {\n\n\"use strict\";\n__nested_webpack_require_53028__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_53028__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; },\n/* harmony export */   \"childMatcher\": function() { return /* binding */ childMatcher; }\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n}\n\nfunction childMatcher(selector) {\n  return function(node) {\n    return node.matches(selector);\n  };\n}\n\n\n\n/***/ }),\n/* 12 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_53744__) {\n\n\"use strict\";\n__nested_webpack_require_53744__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_53744__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var _matcher_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_53744__(11);\n\n\nvar filter = Array.prototype.filter;\n\nfunction children() {\n  return Array.from(this.children);\n}\n\nfunction childrenFilter(match) {\n  return function() {\n    return filter.call(this.children, match);\n  };\n}\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(match) {\n  return this.selectAll(match == null ? children\n      : childrenFilter(typeof match === \"function\" ? match : (0,_matcher_js__WEBPACK_IMPORTED_MODULE_0__.childMatcher)(match)));\n}\n\n\n/***/ }),\n/* 13 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_54682__) {\n\n\"use strict\";\n__nested_webpack_require_54682__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_54682__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_54682__(4);\n/* harmony import */ var _matcher_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_54682__(11);\n\n\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(match) {\n  if (typeof match !== \"function\") match = (0,_matcher_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new _index_js__WEBPACK_IMPORTED_MODULE_1__.Selection(subgroups, this._parents);\n}\n\n\n/***/ }),\n/* 14 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_55853__) {\n\n\"use strict\";\n__nested_webpack_require_55853__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_55853__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_55853__(4);\n/* harmony import */ var _enter_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_55853__(15);\n/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_55853__(17);\n\n\n\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new _enter_js__WEBPACK_IMPORTED_MODULE_0__.EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = new Map,\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = key.call(node, node.__data__, i, group) + \"\";\n      if (nodeByKeyValue.has(keyValue)) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue.set(keyValue, node);\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = key.call(parent, data[i], i, data) + \"\";\n    if (node = nodeByKeyValue.get(keyValue)) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue.delete(keyValue);\n    } else {\n      enter[i] = new _enter_js__WEBPACK_IMPORTED_MODULE_0__.EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue.get(keyValues[i]) === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction datum(node) {\n  return node.__data__;\n}\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(value, key) {\n  if (!arguments.length) return Array.from(this, datum);\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = (0,_constant_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = arraylike(value.call(parent, parent && parent.__data__, j, parents)),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new _index_js__WEBPACK_IMPORTED_MODULE_2__.Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n\n// Given some data, this returns an array-like view of it: an object that\n// exposes a length property and allows numeric indexing. Note that unlike\n// selectAll, this isn’t worried about “live” collections because the resulting\n// array will only be used briefly while data is being bound. (It is possible to\n// cause the data to change while iterating by using a key function, but please\n// don’t; we’d rather avoid a gratuitous copy.)\nfunction arraylike(data) {\n  return typeof data === \"object\" && \"length\" in data\n    ? data // Array, TypedArray, NodeList, array-like\n    : Array.from(data); // Map, Set, iterable, string, or anything else\n}\n\n\n/***/ }),\n/* 15 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_60782__) {\n\n\"use strict\";\n__nested_webpack_require_60782__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_60782__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; },\n/* harmony export */   \"EnterNode\": function() { return /* binding */ EnterNode; }\n/* harmony export */ });\n/* harmony import */ var _sparse_js__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_60782__(16);\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_60782__(4);\n\n\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {\n  return new _index_js__WEBPACK_IMPORTED_MODULE_0__.Selection(this._enter || this._groups.map(_sparse_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]), this._parents);\n}\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\n\n/***/ }),\n/* 16 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_62274__) {\n\n\"use strict\";\n__nested_webpack_require_62274__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_62274__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(update) {\n  return new Array(update.length);\n}\n\n\n/***/ }),\n/* 17 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_62767__) {\n\n\"use strict\";\n__nested_webpack_require_62767__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_62767__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {\n  return function() {\n    return x;\n  };\n}\n\n\n/***/ }),\n/* 18 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_63261__) {\n\n\"use strict\";\n__nested_webpack_require_63261__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_63261__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var _sparse_js__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_63261__(16);\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_63261__(4);\n\n\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {\n  return new _index_js__WEBPACK_IMPORTED_MODULE_0__.Selection(this._exit || this._groups.map(_sparse_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]), this._parents);\n}\n\n\n/***/ }),\n/* 19 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_64060__) {\n\n\"use strict\";\n__nested_webpack_require_64060__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_64060__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(onenter, onupdate, onexit) {\n  var enter = this.enter(), update = this, exit = this.exit();\n  if (typeof onenter === \"function\") {\n    enter = onenter(enter);\n    if (enter) enter = enter.selection();\n  } else {\n    enter = enter.append(onenter + \"\");\n  }\n  if (onupdate != null) {\n    update = onupdate(update);\n    if (update) update = update.selection();\n  }\n  if (onexit == null) exit.remove(); else onexit(exit);\n  return enter && update ? enter.merge(update).order() : update;\n}\n\n\n/***/ }),\n/* 20 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_64991__) {\n\n\"use strict\";\n__nested_webpack_require_64991__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_64991__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_64991__(4);\n\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(context) {\n  var selection = context.selection ? context.selection() : context;\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new _index_js__WEBPACK_IMPORTED_MODULE_0__.Selection(merges, this._parents);\n}\n\n\n/***/ }),\n/* 21 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_66150__) {\n\n\"use strict\";\n__nested_webpack_require_66150__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_66150__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n\n\n/***/ }),\n/* 22 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_66952__) {\n\n\"use strict\";\n__nested_webpack_require_66952__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_66952__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_66952__(4);\n\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new _index_js__WEBPACK_IMPORTED_MODULE_0__.Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\n\n/***/ }),\n/* 23 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_68150__) {\n\n\"use strict\";\n__nested_webpack_require_68150__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_68150__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n\n\n/***/ }),\n/* 24 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_68706__) {\n\n\"use strict\";\n__nested_webpack_require_68706__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_68706__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {\n  return Array.from(this);\n}\n\n\n/***/ }),\n/* 25 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_69185__) {\n\n\"use strict\";\n__nested_webpack_require_69185__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_69185__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n\n\n/***/ }),\n/* 26 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_69865__) {\n\n\"use strict\";\n__nested_webpack_require_69865__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_69865__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {\n  let size = 0;\n  for (const node of this) ++size; // eslint-disable-line no-unused-vars\n  return size;\n}\n\n\n/***/ }),\n/* 27 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_70421__) {\n\n\"use strict\";\n__nested_webpack_require_70421__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_70421__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {\n  return !this.node();\n}\n\n\n/***/ }),\n/* 28 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_70896__) {\n\n\"use strict\";\n__nested_webpack_require_70896__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_70896__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n\n\n/***/ }),\n/* 29 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_71607__) {\n\n\"use strict\";\n__nested_webpack_require_71607__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_71607__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var _namespace_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_71607__(30);\n\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name, value) {\n  var fullname = (0,_namespace_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n\n\n/***/ }),\n/* 30 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_73595__) {\n\n\"use strict\";\n__nested_webpack_require_73595__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_73595__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var _namespaces_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_73595__(31);\n\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return _namespaces_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].hasOwnProperty(prefix) ? {space: _namespaces_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"][prefix], local: name} : name; // eslint-disable-line no-prototype-builtins\n}\n\n\n/***/ }),\n/* 31 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_74511__) {\n\n\"use strict\";\n__nested_webpack_require_74511__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_74511__.d(__nested_webpack_exports__, {\n/* harmony export */   \"xhtml\": function() { return /* binding */ xhtml; }\n/* harmony export */ });\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\n/* harmony default export */ __nested_webpack_exports__[\"default\"] = ({\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n});\n\n\n/***/ }),\n/* 32 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_75150__) {\n\n\"use strict\";\n__nested_webpack_require_75150__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_75150__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; },\n/* harmony export */   \"styleValue\": function() { return /* binding */ styleValue; }\n/* harmony export */ });\n/* harmony import */ var _window_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_75150__(33);\n\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nfunction styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || (0,_window_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n\n\n/***/ }),\n/* 33 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_76718__) {\n\n\"use strict\";\n__nested_webpack_require_76718__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_76718__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n\n\n/***/ }),\n/* 34 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_77358__) {\n\n\"use strict\";\n__nested_webpack_require_77358__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_77358__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n\n\n/***/ }),\n/* 35 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_78397__) {\n\n\"use strict\";\n__nested_webpack_require_78397__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_78397__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n\n\n/***/ }),\n/* 36 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_80559__) {\n\n\"use strict\";\n__nested_webpack_require_80559__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_80559__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n\n\n/***/ }),\n/* 37 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_81509__) {\n\n\"use strict\";\n__nested_webpack_require_81509__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_81509__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n\n\n/***/ }),\n/* 38 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_82451__) {\n\n\"use strict\";\n__nested_webpack_require_82451__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_82451__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {\n  return this.each(raise);\n}\n\n\n/***/ }),\n/* 39 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_83011__) {\n\n\"use strict\";\n__nested_webpack_require_83011__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_83011__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {\n  return this.each(lower);\n}\n\n\n/***/ }),\n/* 40 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_83604__) {\n\n\"use strict\";\n__nested_webpack_require_83604__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_83604__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var _creator_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_83604__(41);\n\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name) {\n  var create = typeof name === \"function\" ? name : (0,_creator_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n\n\n/***/ }),\n/* 41 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_84369__) {\n\n\"use strict\";\n__nested_webpack_require_84369__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_84369__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var _namespace_js__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_84369__(30);\n/* harmony import */ var _namespaces_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_84369__(31);\n\n\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === _namespaces_js__WEBPACK_IMPORTED_MODULE_0__.xhtml && document.documentElement.namespaceURI === _namespaces_js__WEBPACK_IMPORTED_MODULE_0__.xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name) {\n  var fullname = (0,_namespace_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n\n\n/***/ }),\n/* 42 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_85709__) {\n\n\"use strict\";\n__nested_webpack_require_85709__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_85709__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var _creator_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_85709__(41);\n/* harmony import */ var _selector_js__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_85709__(6);\n\n\n\nfunction constantNull() {\n  return null;\n}\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name, before) {\n  var create = typeof name === \"function\" ? name : (0,_creator_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : (0,_selector_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n\n\n/***/ }),\n/* 43 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_86813__) {\n\n\"use strict\";\n__nested_webpack_require_86813__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_86813__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {\n  return this.each(remove);\n}\n\n\n/***/ }),\n/* 44 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_87388__) {\n\n\"use strict\";\n__nested_webpack_require_87388__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_87388__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\nfunction selection_cloneShallow() {\n  var clone = this.cloneNode(false), parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\nfunction selection_cloneDeep() {\n  var clone = this.cloneNode(true), parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n\n\n/***/ }),\n/* 45 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_88263__) {\n\n\"use strict\";\n__nested_webpack_require_88263__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_88263__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n\n\n/***/ }),\n/* 46 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_88817__) {\n\n\"use strict\";\n__nested_webpack_require_88817__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_88817__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\nfunction contextListener(listener) {\n  return function(event) {\n    listener.call(this, event, this.__data__);\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.options);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, options) {\n  return function() {\n    var on = this.__on, o, listener = contextListener(value);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.options);\n        this.addEventListener(o.type, o.listener = listener, o.options = options);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, options);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, options: options};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(typename, value, options) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, options));\n  return this;\n}\n\n\n/***/ }),\n/* 47 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_91266__) {\n\n\"use strict\";\n__nested_webpack_require_91266__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_91266__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var _window_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_91266__(33);\n\n\nfunction dispatchEvent(node, type, params) {\n  var window = (0,_window_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n\n\n/***/ }),\n/* 48 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_92678__) {\n\n\"use strict\";\n__nested_webpack_require_92678__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_92678__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony default export */ function* __WEBPACK_DEFAULT_EXPORT__() {\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) yield node;\n    }\n  }\n}\n\n\n/***/ }),\n/* 49 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_93331__) {\n\n\"use strict\";\n__nested_webpack_require_93331__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_93331__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var _interrupt_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_93331__(50);\n\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name) {\n  return this.each(function() {\n    (0,_interrupt_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, name);\n  });\n}\n\n\n/***/ }),\n/* 50 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_93997__) {\n\n\"use strict\";\n__nested_webpack_require_93997__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_93997__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var _transition_schedule_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_93997__(51);\n\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > _transition_schedule_js__WEBPACK_IMPORTED_MODULE_0__.STARTING && schedule.state < _transition_schedule_js__WEBPACK_IMPORTED_MODULE_0__.ENDING;\n    schedule.state = _transition_schedule_js__WEBPACK_IMPORTED_MODULE_0__.ENDED;\n    schedule.timer.stop();\n    schedule.on.call(active ? \"interrupt\" : \"cancel\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n\n\n/***/ }),\n/* 51 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_95294__) {\n\n\"use strict\";\n__nested_webpack_require_95294__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_95294__.d(__nested_webpack_exports__, {\n/* harmony export */   \"CREATED\": function() { return /* binding */ CREATED; },\n/* harmony export */   \"SCHEDULED\": function() { return /* binding */ SCHEDULED; },\n/* harmony export */   \"STARTING\": function() { return /* binding */ STARTING; },\n/* harmony export */   \"STARTED\": function() { return /* binding */ STARTED; },\n/* harmony export */   \"RUNNING\": function() { return /* binding */ RUNNING; },\n/* harmony export */   \"ENDING\": function() { return /* binding */ ENDING; },\n/* harmony export */   \"ENDED\": function() { return /* binding */ ENDED; },\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; },\n/* harmony export */   \"init\": function() { return /* binding */ init; },\n/* harmony export */   \"set\": function() { return /* binding */ set; },\n/* harmony export */   \"get\": function() { return /* binding */ get; }\n/* harmony export */ });\n/* harmony import */ var d3_dispatch__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_95294__(52);\n/* harmony import */ var d3_timer__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_95294__(53);\n/* harmony import */ var d3_timer__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_95294__(54);\n\n\n\nvar emptyOn = (0,d3_dispatch__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"start\", \"end\", \"cancel\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nfunction init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nfunction set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTED) throw new Error(\"too late; already running\");\n  return schedule;\n}\n\nfunction get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = (0,d3_timer__WEBPACK_IMPORTED_MODULE_1__.timer)(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return (0,d3_timer__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(start);\n\n      // Interrupt the active transition, if any.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions.\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"cancel\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    (0,d3_timer__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(node, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\n\n/***/ }),\n/* 52 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_101416__) {\n\n\"use strict\";\n__nested_webpack_require_101416__.r(__nested_webpack_exports__);\nvar noop = {value: () => {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _) || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\n/* harmony default export */ __nested_webpack_exports__[\"default\"] = (dispatch);\n\n\n/***/ }),\n/* 53 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_104385__) {\n\n\"use strict\";\n__nested_webpack_require_104385__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_104385__.d(__nested_webpack_exports__, {\n/* harmony export */   \"now\": function() { return /* binding */ now; },\n/* harmony export */   \"Timer\": function() { return /* binding */ Timer; },\n/* harmony export */   \"timer\": function() { return /* binding */ timer; },\n/* harmony export */   \"timerFlush\": function() { return /* binding */ timerFlush; }\n/* harmony export */ });\nvar frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(undefined, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\n\n/***/ }),\n/* 54 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_107840__) {\n\n\"use strict\";\n__nested_webpack_require_107840__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_107840__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var _timer_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_107840__(53);\n\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(callback, delay, time) {\n  var t = new _timer_js__WEBPACK_IMPORTED_MODULE_0__.Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(elapsed => {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n\n\n/***/ }),\n/* 55 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_108605__) {\n\n\"use strict\";\n__nested_webpack_require_108605__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_108605__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var _transition_index_js__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_108605__(57);\n/* harmony import */ var _transition_schedule_js__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_108605__(51);\n/* harmony import */ var d3_ease__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_108605__(56);\n/* harmony import */ var d3_timer__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_108605__(53);\n\n\n\n\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: d3_ease__WEBPACK_IMPORTED_MODULE_0__.cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      throw new Error(`transition ${id} not found`);\n    }\n  }\n  return timing;\n}\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name) {\n  var id,\n      timing;\n\n  if (name instanceof _transition_index_js__WEBPACK_IMPORTED_MODULE_1__.Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = (0,_transition_index_js__WEBPACK_IMPORTED_MODULE_1__.newId)(), (timing = defaultTiming).time = (0,d3_timer__WEBPACK_IMPORTED_MODULE_2__.now)(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        (0,_transition_schedule_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new _transition_index_js__WEBPACK_IMPORTED_MODULE_1__.Transition(groups, this._parents, name, id);\n}\n\n\n/***/ }),\n/* 56 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_110620__) {\n\n\"use strict\";\n__nested_webpack_require_110620__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_110620__.d(__nested_webpack_exports__, {\n/* harmony export */   \"cubicIn\": function() { return /* binding */ cubicIn; },\n/* harmony export */   \"cubicOut\": function() { return /* binding */ cubicOut; },\n/* harmony export */   \"cubicInOut\": function() { return /* binding */ cubicInOut; }\n/* harmony export */ });\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\n\n/***/ }),\n/* 57 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_111324__) {\n\n\"use strict\";\n__nested_webpack_require_111324__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_111324__.d(__nested_webpack_exports__, {\n/* harmony export */   \"Transition\": function() { return /* binding */ Transition; },\n/* harmony export */   \"default\": function() { return /* binding */ transition; },\n/* harmony export */   \"newId\": function() { return /* binding */ newId; }\n/* harmony export */ });\n/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_111324__(4);\n/* harmony import */ var _attr_js__WEBPACK_IMPORTED_MODULE_8__ = __nested_webpack_require_111324__(65);\n/* harmony import */ var _attrTween_js__WEBPACK_IMPORTED_MODULE_9__ = __nested_webpack_require_111324__(80);\n/* harmony import */ var _delay_js__WEBPACK_IMPORTED_MODULE_16__ = __nested_webpack_require_111324__(86);\n/* harmony import */ var _duration_js__WEBPACK_IMPORTED_MODULE_17__ = __nested_webpack_require_111324__(87);\n/* harmony import */ var _ease_js__WEBPACK_IMPORTED_MODULE_18__ = __nested_webpack_require_111324__(88);\n/* harmony import */ var _easeVarying_js__WEBPACK_IMPORTED_MODULE_19__ = __nested_webpack_require_111324__(89);\n/* harmony import */ var _filter_js__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_111324__(60);\n/* harmony import */ var _merge_js__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_111324__(61);\n/* harmony import */ var _on_js__WEBPACK_IMPORTED_MODULE_7__ = __nested_webpack_require_111324__(64);\n/* harmony import */ var _remove_js__WEBPACK_IMPORTED_MODULE_14__ = __nested_webpack_require_111324__(85);\n/* harmony import */ var _select_js__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_111324__(58);\n/* harmony import */ var _selectAll_js__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_111324__(59);\n/* harmony import */ var _selection_js__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_111324__(62);\n/* harmony import */ var _style_js__WEBPACK_IMPORTED_MODULE_10__ = __nested_webpack_require_111324__(81);\n/* harmony import */ var _styleTween_js__WEBPACK_IMPORTED_MODULE_11__ = __nested_webpack_require_111324__(82);\n/* harmony import */ var _text_js__WEBPACK_IMPORTED_MODULE_12__ = __nested_webpack_require_111324__(83);\n/* harmony import */ var _textTween_js__WEBPACK_IMPORTED_MODULE_13__ = __nested_webpack_require_111324__(84);\n/* harmony import */ var _transition_js__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_111324__(63);\n/* harmony import */ var _tween_js__WEBPACK_IMPORTED_MODULE_15__ = __nested_webpack_require_111324__(79);\n/* harmony import */ var _end_js__WEBPACK_IMPORTED_MODULE_20__ = __nested_webpack_require_111324__(90);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return (0,d3_selection__WEBPACK_IMPORTED_MODULE_0__[\"default\"])().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = d3_selection__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: _select_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  selectAll: _selectAll_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n  selectChild: selection_prototype.selectChild,\n  selectChildren: selection_prototype.selectChildren,\n  filter: _filter_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n  merge: _merge_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n  selection: _selection_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n  transition: _transition_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"],\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: _on_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"],\n  attr: _attr_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"],\n  attrTween: _attrTween_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"],\n  style: _style_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"],\n  styleTween: _styleTween_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"],\n  text: _text_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"],\n  textTween: _textTween_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"],\n  remove: _remove_js__WEBPACK_IMPORTED_MODULE_14__[\"default\"],\n  tween: _tween_js__WEBPACK_IMPORTED_MODULE_15__[\"default\"],\n  delay: _delay_js__WEBPACK_IMPORTED_MODULE_16__[\"default\"],\n  duration: _duration_js__WEBPACK_IMPORTED_MODULE_17__[\"default\"],\n  ease: _ease_js__WEBPACK_IMPORTED_MODULE_18__[\"default\"],\n  easeVarying: _easeVarying_js__WEBPACK_IMPORTED_MODULE_19__[\"default\"],\n  end: _end_js__WEBPACK_IMPORTED_MODULE_20__[\"default\"],\n  [Symbol.iterator]: selection_prototype[Symbol.iterator]\n};\n\n\n/***/ }),\n/* 58 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_115929__) {\n\n\"use strict\";\n__nested_webpack_require_115929__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_115929__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_115929__(6);\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_115929__(57);\n/* harmony import */ var _schedule_js__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_115929__(51);\n\n\n\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = (0,d3_selection__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        (0,_schedule_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(subgroup[i], name, id, i, subgroup, (0,_schedule_js__WEBPACK_IMPORTED_MODULE_1__.get)(node, id));\n      }\n    }\n  }\n\n  return new _index_js__WEBPACK_IMPORTED_MODULE_2__.Transition(subgroups, this._parents, name, id);\n}\n\n\n/***/ }),\n/* 59 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_117522__) {\n\n\"use strict\";\n__nested_webpack_require_117522__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_117522__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_117522__(9);\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_117522__(57);\n/* harmony import */ var _schedule_js__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_117522__(51);\n\n\n\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = (0,d3_selection__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = (0,_schedule_js__WEBPACK_IMPORTED_MODULE_1__.get)(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            (0,_schedule_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new _index_js__WEBPACK_IMPORTED_MODULE_2__.Transition(subgroups, parents, name, id);\n}\n\n\n/***/ }),\n/* 60 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_119166__) {\n\n\"use strict\";\n__nested_webpack_require_119166__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_119166__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_119166__(11);\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_119166__(57);\n\n\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(match) {\n  if (typeof match !== \"function\") match = (0,d3_selection__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new _index_js__WEBPACK_IMPORTED_MODULE_1__.Transition(subgroups, this._parents, this._name, this._id);\n}\n\n\n/***/ }),\n/* 61 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_120363__) {\n\n\"use strict\";\n__nested_webpack_require_120363__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_120363__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_120363__(57);\n\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new _index_js__WEBPACK_IMPORTED_MODULE_0__.Transition(merges, this._parents, this._name, this._id);\n}\n\n\n/***/ }),\n/* 62 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_121533__) {\n\n\"use strict\";\n__nested_webpack_require_121533__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_121533__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_121533__(4);\n\n\nvar Selection = d3_selection__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype.constructor;\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {\n  return new Selection(this._groups, this._parents);\n}\n\n\n/***/ }),\n/* 63 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_122226__) {\n\n\"use strict\";\n__nested_webpack_require_122226__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_122226__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_122226__(57);\n/* harmony import */ var _schedule_js__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_122226__(51);\n\n\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = (0,_index_js__WEBPACK_IMPORTED_MODULE_0__.newId)();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = (0,_schedule_js__WEBPACK_IMPORTED_MODULE_1__.get)(node, id0);\n        (0,_schedule_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new _index_js__WEBPACK_IMPORTED_MODULE_0__.Transition(groups, this._parents, name, id1);\n}\n\n\n/***/ }),\n/* 64 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_123617__) {\n\n\"use strict\";\n__nested_webpack_require_123617__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_123617__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var _schedule_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_123617__(51);\n\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? _schedule_js__WEBPACK_IMPORTED_MODULE_0__.init : _schedule_js__WEBPACK_IMPORTED_MODULE_0__.set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.get)(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n\n\n/***/ }),\n/* 65 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_125072__) {\n\n\"use strict\";\n__nested_webpack_require_125072__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_125072__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_125072__(66);\n/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_125072__(30);\n/* harmony import */ var _tween_js__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_125072__(79);\n/* harmony import */ var _interpolate_js__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_125072__(70);\n\n\n\n\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttribute(name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttributeNS(fullname.space, fullname.local);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttribute(name);\n    string0 = this.getAttribute(name);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    string0 = this.getAttributeNS(fullname.space, fullname.local);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name, value) {\n  var fullname = (0,d3_selection__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(name), i = fullname === \"transform\" ? d3_interpolate__WEBPACK_IMPORTED_MODULE_1__.interpolateTransformSvg : _interpolate_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, (0,_tween_js__WEBPACK_IMPORTED_MODULE_3__.tweenValue)(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));\n}\n\n\n/***/ }),\n/* 66 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_128527__) {\n\n\"use strict\";\n__nested_webpack_require_128527__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_128527__.d(__nested_webpack_exports__, {\n/* harmony export */   \"interpolateTransformCss\": function() { return /* binding */ interpolateTransformCss; },\n/* harmony export */   \"interpolateTransformSvg\": function() { return /* binding */ interpolateTransformSvg; }\n/* harmony export */ });\n/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_128527__(67);\n/* harmony import */ var _parse_js__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_128527__(68);\n\n\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: (0,_number_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(xa, xb)}, {i: i - 2, x: (0,_number_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: (0,_number_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: (0,_number_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: (0,_number_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(xa, xb)}, {i: i - 2, x: (0,_number_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(_parse_js__WEBPACK_IMPORTED_MODULE_1__.parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(_parse_js__WEBPACK_IMPORTED_MODULE_1__.parseSvg, \", \", \")\", \")\");\n\n\n/***/ }),\n/* 67 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_131543__) {\n\n\"use strict\";\n__nested_webpack_require_131543__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_131543__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(a, b) {\n  return a = +a, b = +b, function(t) {\n    return a * (1 - t) + b * t;\n  };\n}\n\n\n/***/ }),\n/* 68 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_132075__) {\n\n\"use strict\";\n__nested_webpack_require_132075__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_132075__.d(__nested_webpack_exports__, {\n/* harmony export */   \"parseCss\": function() { return /* binding */ parseCss; },\n/* harmony export */   \"parseSvg\": function() { return /* binding */ parseSvg; }\n/* harmony export */ });\n/* harmony import */ var _decompose_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_132075__(69);\n\n\nvar svgNode;\n\n/* eslint-disable no-undef */\nfunction parseCss(value) {\n  const m = new (typeof DOMMatrix === \"function\" ? DOMMatrix : WebKitCSSMatrix)(value + \"\");\n  return m.isIdentity ? _decompose_js__WEBPACK_IMPORTED_MODULE_0__.identity : (0,_decompose_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(m.a, m.b, m.c, m.d, m.e, m.f);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return _decompose_js__WEBPACK_IMPORTED_MODULE_0__.identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return _decompose_js__WEBPACK_IMPORTED_MODULE_0__.identity;\n  value = value.matrix;\n  return (0,_decompose_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\n\n/***/ }),\n/* 69 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_133442__) {\n\n\"use strict\";\n__nested_webpack_require_133442__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_133442__.d(__nested_webpack_exports__, {\n/* harmony export */   \"identity\": function() { return /* binding */ identity; },\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\nvar degrees = 180 / Math.PI;\n\nvar identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n\n\n/***/ }),\n/* 70 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_134611__) {\n\n\"use strict\";\n__nested_webpack_require_134611__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_134611__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_134611__(71);\n/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_134611__(67);\n/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_134611__(73);\n/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_134611__(78);\n\n\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(a, b) {\n  var c;\n  return (typeof b === \"number\" ? d3_interpolate__WEBPACK_IMPORTED_MODULE_0__[\"default\"]\n      : b instanceof d3_color__WEBPACK_IMPORTED_MODULE_1__[\"default\"] ? d3_interpolate__WEBPACK_IMPORTED_MODULE_2__[\"default\"]\n      : (c = (0,d3_color__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(b)) ? (b = c, d3_interpolate__WEBPACK_IMPORTED_MODULE_2__[\"default\"])\n      : d3_interpolate__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(a, b);\n}\n\n\n/***/ }),\n/* 71 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_135880__) {\n\n\"use strict\";\n__nested_webpack_require_135880__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_135880__.d(__nested_webpack_exports__, {\n/* harmony export */   \"Color\": function() { return /* binding */ Color; },\n/* harmony export */   \"darker\": function() { return /* binding */ darker; },\n/* harmony export */   \"brighter\": function() { return /* binding */ brighter; },\n/* harmony export */   \"default\": function() { return /* binding */ color; },\n/* harmony export */   \"rgbConvert\": function() { return /* binding */ rgbConvert; },\n/* harmony export */   \"rgb\": function() { return /* binding */ rgb; },\n/* harmony export */   \"Rgb\": function() { return /* binding */ Rgb; },\n/* harmony export */   \"hslConvert\": function() { return /* binding */ hslConvert; },\n/* harmony export */   \"hsl\": function() { return /* binding */ hsl; }\n/* harmony export */ });\n/* harmony import */ var _define_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_135880__(72);\n\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\n(0,_define_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Color, color, {\n  copy: function(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nfunction color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\n      : null) // invalid hex\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\n(0,_define_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Rgb, rgb, (0,_define_js__WEBPACK_IMPORTED_MODULE_0__.extend)(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n}\n\nfunction rgb_formatRgb() {\n  var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n  return (a === 1 ? \"rgb(\" : \"rgba(\")\n      + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n      + (a === 1 ? \")\" : \", \" + a + \")\");\n}\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\n(0,_define_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(Hsl, hsl, (0,_define_js__WEBPACK_IMPORTED_MODULE_0__.extend)(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"hsl(\" : \"hsla(\")\n        + (this.h || 0) + \", \"\n        + (this.s || 0) * 100 + \"%, \"\n        + (this.l || 0) * 100 + \"%\"\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\n\n/***/ }),\n/* 72 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_147726__) {\n\n\"use strict\";\n__nested_webpack_require_147726__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_147726__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; },\n/* harmony export */   \"extend\": function() { return /* binding */ extend; }\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\n\n/***/ }),\n/* 73 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_148559__) {\n\n\"use strict\";\n__nested_webpack_require_148559__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_148559__.d(__nested_webpack_exports__, {\n/* harmony export */   \"rgbBasis\": function() { return /* binding */ rgbBasis; },\n/* harmony export */   \"rgbBasisClosed\": function() { return /* binding */ rgbBasisClosed; }\n/* harmony export */ });\n/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_148559__(71);\n/* harmony import */ var _basis_js__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_148559__(76);\n/* harmony import */ var _basisClosed_js__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_148559__(77);\n/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_148559__(74);\n\n\n\n\n\n/* harmony default export */ __nested_webpack_exports__[\"default\"] = ((function rgbGamma(y) {\n  var color = (0,_color_js__WEBPACK_IMPORTED_MODULE_0__.gamma)(y);\n\n  function rgb(start, end) {\n    var r = color((start = (0,d3_color__WEBPACK_IMPORTED_MODULE_1__.rgb)(start)).r, (end = (0,d3_color__WEBPACK_IMPORTED_MODULE_1__.rgb)(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = (0,_color_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1));\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = (0,d3_color__WEBPACK_IMPORTED_MODULE_1__.rgb)(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(_basis_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\nvar rgbBasisClosed = rgbSpline(_basisClosed_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]);\n\n\n/***/ }),\n/* 74 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_150834__) {\n\n\"use strict\";\n__nested_webpack_require_150834__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_150834__.d(__nested_webpack_exports__, {\n/* harmony export */   \"hue\": function() { return /* binding */ hue; },\n/* harmony export */   \"gamma\": function() { return /* binding */ gamma; },\n/* harmony export */   \"default\": function() { return /* binding */ nogamma; }\n/* harmony export */ });\n/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_150834__(75);\n\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(isNaN(a) ? b : a);\n}\n\n\n/***/ }),\n/* 75 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_152201__) {\n\n\"use strict\";\n__nested_webpack_require_152201__.r(__nested_webpack_exports__);\n/* harmony default export */ __nested_webpack_exports__[\"default\"] = (x => () => x);\n\n\n/***/ }),\n/* 76 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_152456__) {\n\n\"use strict\";\n__nested_webpack_require_152456__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_152456__.d(__nested_webpack_exports__, {\n/* harmony export */   \"basis\": function() { return /* binding */ basis; },\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n\n\n/***/ }),\n/* 77 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_153547__) {\n\n\"use strict\";\n__nested_webpack_require_153547__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_153547__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var _basis_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_153547__(76);\n\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return (0,_basis_js__WEBPACK_IMPORTED_MODULE_0__.basis)((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n\n\n/***/ }),\n/* 78 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_154433__) {\n\n\"use strict\";\n__nested_webpack_require_154433__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_154433__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_154433__(67);\n\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: (0,_number_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n\n\n/***/ }),\n/* 79 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_156723__) {\n\n\"use strict\";\n__nested_webpack_require_156723__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_156723__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; },\n/* harmony export */   \"tweenValue\": function() { return /* binding */ tweenValue; }\n/* harmony export */ });\n/* harmony import */ var _schedule_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_156723__(51);\n\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.set)(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.set)(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.get)(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.set)(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.get)(node, id).value[name];\n  };\n}\n\n\n/***/ }),\n/* 80 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_159534__) {\n\n\"use strict\";\n__nested_webpack_require_159534__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_159534__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_159534__(30);\n\n\nfunction attrInterpolate(name, i) {\n  return function(t) {\n    this.setAttribute(name, i.call(this, t));\n  };\n}\n\nfunction attrInterpolateNS(fullname, i) {\n  return function(t) {\n    this.setAttributeNS(fullname.space, fullname.local, i.call(this, t));\n  };\n}\n\nfunction attrTweenNS(fullname, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = (0,d3_selection__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n\n\n/***/ }),\n/* 81 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_161206__) {\n\n\"use strict\";\n__nested_webpack_require_161206__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_161206__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_161206__(66);\n/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_161206__(32);\n/* harmony import */ var _schedule_js__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_161206__(51);\n/* harmony import */ var _tween_js__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_161206__(79);\n/* harmony import */ var _interpolate_js__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_161206__(70);\n\n\n\n\n\n\nfunction styleNull(name, interpolate) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = (0,d3_selection__WEBPACK_IMPORTED_MODULE_0__.styleValue)(this, name),\n        string1 = (this.style.removeProperty(name), (0,d3_selection__WEBPACK_IMPORTED_MODULE_0__.styleValue)(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, string10 = string1);\n  };\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = (0,d3_selection__WEBPACK_IMPORTED_MODULE_0__.styleValue)(this, name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = (0,d3_selection__WEBPACK_IMPORTED_MODULE_0__.styleValue)(this, name),\n        value1 = value(this),\n        string1 = value1 + \"\";\n    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), (0,d3_selection__WEBPACK_IMPORTED_MODULE_0__.styleValue)(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction styleMaybeRemove(id, name) {\n  var on0, on1, listener0, key = \"style.\" + name, event = \"end.\" + key, remove;\n  return function() {\n    var schedule = (0,_schedule_js__WEBPACK_IMPORTED_MODULE_1__.set)(this, id),\n        on = schedule.on,\n        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);\n\n    schedule.on = on1;\n  };\n}\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? d3_interpolate__WEBPACK_IMPORTED_MODULE_2__.interpolateTransformCss : _interpolate_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"];\n  return value == null ? this\n      .styleTween(name, styleNull(name, i))\n      .on(\"end.style.\" + name, styleRemove(name))\n    : typeof value === \"function\" ? this\n      .styleTween(name, styleFunction(name, i, (0,_tween_js__WEBPACK_IMPORTED_MODULE_4__.tweenValue)(this, \"style.\" + name, value)))\n      .each(styleMaybeRemove(this._id, name))\n    : this\n      .styleTween(name, styleConstant(name, i, value), priority)\n      .on(\"end.style.\" + name, null);\n}\n\n\n/***/ }),\n/* 82 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_165052__) {\n\n\"use strict\";\n__nested_webpack_require_165052__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_165052__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\nfunction styleInterpolate(name, i, priority) {\n  return function(t) {\n    this.style.setProperty(name, i.call(this, t), priority);\n  };\n}\n\nfunction styleTween(name, value, priority) {\n  var t, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);\n    return t;\n  }\n  tween._value = value;\n  return tween;\n}\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n\n\n/***/ }),\n/* 83 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_166216__) {\n\n\"use strict\";\n__nested_webpack_require_166216__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_166216__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var _tween_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_166216__(79);\n\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction((0,_tween_js__WEBPACK_IMPORTED_MODULE_0__.tweenValue)(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n\n\n/***/ }),\n/* 84 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_167210__) {\n\n\"use strict\";\n__nested_webpack_require_167210__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_167210__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\nfunction textInterpolate(i) {\n  return function(t) {\n    this.textContent = i.call(this, t);\n  };\n}\n\nfunction textTween(value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && textInterpolate(i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(value) {\n  var key = \"text\";\n  if (arguments.length < 1) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, textTween(value));\n}\n\n\n/***/ }),\n/* 85 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_168231__) {\n\n\"use strict\";\n__nested_webpack_require_168231__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_168231__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n\n\n/***/ }),\n/* 86 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_168937__) {\n\n\"use strict\";\n__nested_webpack_require_168937__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_168937__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var _schedule_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_168937__(51);\n\n\nfunction delayFunction(id, value) {\n  return function() {\n    (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.init)(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.init)(this, id).delay = value;\n  };\n}\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.get)(this.node(), id).delay;\n}\n\n\n/***/ }),\n/* 87 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_170064__) {\n\n\"use strict\";\n__nested_webpack_require_170064__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_170064__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var _schedule_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_170064__(51);\n\n\nfunction durationFunction(id, value) {\n  return function() {\n    (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.set)(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.set)(this, id).duration = value;\n  };\n}\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.get)(this.node(), id).duration;\n}\n\n\n/***/ }),\n/* 88 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_171210__) {\n\n\"use strict\";\n__nested_webpack_require_171210__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_171210__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var _schedule_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_171210__(51);\n\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.set)(this, id).ease = value;\n  };\n}\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.get)(this.node(), id).ease;\n}\n\n\n/***/ }),\n/* 89 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_172130__) {\n\n\"use strict\";\n__nested_webpack_require_172130__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_172130__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var _schedule_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_172130__(51);\n\n\nfunction easeVarying(id, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (typeof v !== \"function\") throw new Error;\n    (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.set)(this, id).ease = v;\n  };\n}\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(value) {\n  if (typeof value !== \"function\") throw new Error;\n  return this.each(easeVarying(this._id, value));\n}\n\n\n/***/ }),\n/* 90 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_173015__) {\n\n\"use strict\";\n__nested_webpack_require_173015__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_173015__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var _schedule_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_173015__(51);\n\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {\n  var on0, on1, that = this, id = that._id, size = that.size();\n  return new Promise(function(resolve, reject) {\n    var cancel = {value: reject},\n        end = {value: function() { if (--size === 0) resolve(); }};\n\n    that.each(function() {\n      var schedule = (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.set)(this, id),\n          on = schedule.on;\n\n      // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n      if (on !== on0) {\n        on1 = (on0 = on).copy();\n        on1._.cancel.push(cancel);\n        on1._.interrupt.push(cancel);\n        on1._.end.push(end);\n      }\n\n      schedule.on = on1;\n    });\n\n    // The selection was empty, resolve end immediately\n    if (size === 0) resolve();\n  });\n}\n\n\n/***/ }),\n/* 91 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_174376__) {\n\n\"use strict\";\n__nested_webpack_require_174376__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_174376__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var _transition_index_js__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_174376__(57);\n/* harmony import */ var _transition_schedule_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_174376__(51);\n\n\n\nvar root = [null];\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > _transition_schedule_js__WEBPACK_IMPORTED_MODULE_0__.SCHEDULED && schedule.name === name) {\n        return new _transition_index_js__WEBPACK_IMPORTED_MODULE_1__.Transition([[node]], root, name, +i);\n      }\n    }\n  }\n\n  return null;\n}\n\n\n/***/ }),\n/* 92 */\n/***/ (function(__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_175486__) {\n\n\"use strict\";\n__nested_webpack_require_175486__.r(__nested_webpack_exports__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nvar Colorizer = /*#__PURE__*/function () {\n  /**\n   * @return {void}\n   */\n  function Colorizer() {\n    _classCallCheck(this, Colorizer);\n\n    this.hexExpression = /^#([0-9a-f]{3}|[0-9a-f]{6})$/i;\n    this.instanceId = null;\n    this.labelFill = null;\n    this.scale = null;\n  }\n  /**\n   * @param {string} instanceId\n   *\n   * @return {void}\n   */\n\n\n  _createClass(Colorizer, [{\n    key: \"setInstanceId\",\n    value: function setInstanceId(instanceId) {\n      this.instanceId = instanceId;\n    }\n    /**\n     * @param {string} fill\n     *\n     * @return {void}\n     */\n\n  }, {\n    key: \"setLabelFill\",\n    value: function setLabelFill(fill) {\n      this.labelFill = fill;\n    }\n    /**\n     * @param {function|Array} scale\n     *\n     * @return {void}\n     */\n\n  }, {\n    key: \"setScale\",\n    value: function setScale(scale) {\n      this.scale = scale;\n    }\n    /**\n     * Given a raw data block, return an appropriate color for the block.\n     *\n     * @param {string} fill\n     * @param {Number} index\n     * @param {string} fillType\n     *\n     * @return {Object}\n     */\n\n  }, {\n    key: \"getBlockFill\",\n    value: function getBlockFill(fill, index, fillType) {\n      var raw = this.getBlockRawFill(fill, index);\n      return {\n        raw: raw,\n        actual: this.getBlockActualFill(raw, index, fillType)\n      };\n    }\n    /**\n     * Return the raw hex color for the block.\n     *\n     * @param {string} fill\n     * @param {Number} index\n     *\n     * @return {string}\n     */\n\n  }, {\n    key: \"getBlockRawFill\",\n    value: function getBlockRawFill(fill, index) {\n      // Use the block's color, if set and valid\n      if (this.hexExpression.test(fill)) {\n        return fill;\n      } // Otherwise, attempt to use the array scale\n\n\n      if (Array.isArray(this.scale)) {\n        return this.scale[index];\n      } // Finally, use a functional scale\n\n\n      return this.scale(index);\n    }\n    /**\n     * Return the actual background for the block.\n     *\n     * @param {string} raw\n     * @param {Number} index\n     * @param {string} fillType\n     *\n     * @return {string}\n     */\n\n  }, {\n    key: \"getBlockActualFill\",\n    value: function getBlockActualFill(raw, index, fillType) {\n      if (fillType === 'solid') {\n        return raw;\n      }\n\n      return \"url(#\".concat(this.getGradientId(index), \")\");\n    }\n    /**\n     * Return the gradient ID for the given index.\n     *\n     * @param {Number} index\n     *\n     * @return {string}\n     */\n\n  }, {\n    key: \"getGradientId\",\n    value: function getGradientId(index) {\n      return \"\".concat(this.instanceId, \"-gradient-\").concat(index);\n    }\n    /**\n     * Given a raw data block, return an appropriate label color.\n     *\n     * @param {string} labelFill\n     *\n     * @return {string}\n     */\n\n  }, {\n    key: \"getLabelColor\",\n    value: function getLabelColor(labelFill) {\n      return this.hexExpression.test(labelFill) ? labelFill : this.labelFill;\n    }\n    /**\n     * Shade a color to the given percentage.\n     *\n     * @param {string} color A hex color.\n     * @param {number} shade The shade adjustment. Can be positive or negative.\n     *\n     * @return {string}\n     */\n\n  }, {\n    key: \"shade\",\n    value: function shade(color, _shade) {\n      var _this$hexToRgb = this.hexToRgb(color),\n          R = _this$hexToRgb.R,\n          G = _this$hexToRgb.G,\n          B = _this$hexToRgb.B;\n\n      var t = _shade < 0 ? 0 : 255;\n      var p = _shade < 0 ? _shade * -1 : _shade;\n      var converted = 0x1000000 + (Math.round((t - R) * p) + R) * 0x10000 + (Math.round((t - G) * p) + G) * 0x100 + (Math.round((t - B) * p) + B);\n      return \"#\".concat(converted.toString(16).slice(1));\n    }\n    /**\n     * Convert a hex color to an RGB object.\n     *\n     * @param {string} color\n     *\n     * @returns {{R: Number, G: number, B: number}}\n     */\n\n  }, {\n    key: \"hexToRgb\",\n    value: function hexToRgb(color) {\n      var hex = color.slice(1);\n\n      if (hex.length === 3) {\n        hex = this.expandHex(hex);\n      }\n\n      var f = parseInt(hex, 16);\n      /* eslint-disable no-bitwise */\n\n      var R = f >> 16;\n      var G = f >> 8 & 0x00FF;\n      var B = f & 0x0000FF;\n      /* eslint-enable */\n\n      return {\n        R: R,\n        G: G,\n        B: B\n      };\n    }\n    /**\n     * Expands a three character hex code to six characters.\n     *\n     * @param {string} hex\n     *\n     * @return {string}\n     */\n\n  }, {\n    key: \"expandHex\",\n    value: function expandHex(hex) {\n      return hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n    }\n  }]);\n\n  return Colorizer;\n}();\n\n/* harmony default export */ __nested_webpack_exports__[\"default\"] = (Colorizer);\n\n/***/ }),\n/* 93 */\n/***/ (function(__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_181041__) {\n\n\"use strict\";\n__nested_webpack_require_181041__.r(__nested_webpack_exports__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nvar Formatter = /*#__PURE__*/function () {\n  function Formatter() {\n    _classCallCheck(this, Formatter);\n  }\n\n  _createClass(Formatter, [{\n    key: \"getFormatter\",\n    value:\n    /**\n     * Register the format function.\n     *\n     * @param {string|function} format\n     *\n     * @return {function}\n     */\n    function getFormatter(format) {\n      var _this = this;\n\n      if (typeof format === 'function') {\n        return format;\n      }\n\n      return function (label, value, formattedValue) {\n        return _this.stringFormatter(label, value, formattedValue, format);\n      };\n    }\n    /**\n     * Format the given value according to the data point or the format.\n     *\n     * @param {string}   label\n     * @param {number}   value\n     * @param {*}        formattedValue\n     * @param {function} formatter\n     *\n     * @return string\n     */\n\n  }, {\n    key: \"format\",\n    value: function format(_ref, formatter) {\n      var label = _ref.label,\n          value = _ref.value,\n          _ref$formattedValue = _ref.formattedValue,\n          formattedValue = _ref$formattedValue === void 0 ? null : _ref$formattedValue;\n      return formatter(label, value, formattedValue);\n    }\n    /**\n     * Format the string according to a simple expression.\n     *\n     * {l}: label\n     * {v}: raw value\n     * {f}: formatted value\n     *\n     * @param {string} label\n     * @param {number} value\n     * @param {*}      formattedValue\n     * @param {string} expression\n     *\n     * @return {string}\n     */\n\n  }, {\n    key: \"stringFormatter\",\n    value: function stringFormatter(label, value, formattedValue, expression) {\n      var formatted = formattedValue; // Attempt to use supplied formatted value\n      // Otherwise, use the default\n\n      if (formattedValue === null) {\n        formatted = this.getDefaultFormattedValue(value);\n      }\n\n      return expression.split('{l}').join(label).split('{v}').join(value).split('{f}').join(formatted);\n    }\n    /**\n     * @param {number} value\n     *\n     * @return {string}\n     */\n\n  }, {\n    key: \"getDefaultFormattedValue\",\n    value: function getDefaultFormattedValue(value) {\n      return value.toLocaleString();\n    }\n  }]);\n\n  return Formatter;\n}();\n\n/* harmony default export */ __nested_webpack_exports__[\"default\"] = (Formatter);\n\n/***/ }),\n/* 94 */\n/***/ (function(__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_184244__) {\n\n\"use strict\";\n__nested_webpack_require_184244__.r(__nested_webpack_exports__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nvar Navigator = /*#__PURE__*/function () {\n  function Navigator() {\n    _classCallCheck(this, Navigator);\n  }\n\n  _createClass(Navigator, [{\n    key: \"plot\",\n    value:\n    /**\n     * Given a list of path commands, returns the compiled description.\n     *\n     * @param {Array} commands\n     *\n     * @return {string}\n     */\n    function plot(commands) {\n      var path = '';\n      commands.forEach(function (command) {\n        path += \"\".concat(command[0]).concat(command[1], \",\").concat(command[2], \" \");\n      });\n      return path.replace(/ +/g, ' ').trim();\n    }\n    /**\n     * @param {Object}  dimensions\n     * @param {boolean} isValueOverlay\n     *\n     * @return {Array}\n     */\n\n  }, {\n    key: \"makeCurvedPaths\",\n    value: function makeCurvedPaths(dimensions) {\n      var isValueOverlay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var points = this.makeBezierPoints(dimensions);\n\n      if (isValueOverlay) {\n        return this.makeBezierPath(points, dimensions.ratio);\n      }\n\n      return this.makeBezierPath(points);\n    }\n    /**\n     * @param {Number} centerX\n     * @param {Number} prevLeftX\n     * @param {Number} prevRightX\n     * @param {Number} prevHeight\n     * @param {Number} nextLeftX\n     * @param {Number} nextRightX\n     * @param {Number} nextHeight\n     * @param {Number} curveHeight\n     *\n     * @return {Object}\n     */\n\n  }, {\n    key: \"makeBezierPoints\",\n    value: function makeBezierPoints(_ref) {\n      var centerX = _ref.centerX,\n          prevLeftX = _ref.prevLeftX,\n          prevRightX = _ref.prevRightX,\n          prevHeight = _ref.prevHeight,\n          nextLeftX = _ref.nextLeftX,\n          nextRightX = _ref.nextRightX,\n          nextHeight = _ref.nextHeight,\n          curveHeight = _ref.curveHeight;\n      return {\n        p00: {\n          x: prevLeftX,\n          y: prevHeight\n        },\n        p01: {\n          x: centerX,\n          y: prevHeight + curveHeight / 2\n        },\n        p02: {\n          x: prevRightX,\n          y: prevHeight\n        },\n        p10: {\n          x: nextLeftX,\n          y: nextHeight\n        },\n        p11: {\n          x: centerX,\n          y: nextHeight + curveHeight\n        },\n        p12: {\n          x: nextRightX,\n          y: nextHeight\n        }\n      };\n    }\n    /**\n     * @param {Object} p00\n     * @param {Object} p01\n     * @param {Object} p02\n     * @param {Object} p10\n     * @param {Object} p11\n     * @param {Object} p12\n     * @param {Number} ratio\n     *\n     * @return {Array}\n     */\n\n  }, {\n    key: \"makeBezierPath\",\n    value: function makeBezierPath(_ref2) {\n      var p00 = _ref2.p00,\n          p01 = _ref2.p01,\n          p02 = _ref2.p02,\n          p10 = _ref2.p10,\n          p11 = _ref2.p11,\n          p12 = _ref2.p12;\n      var ratio = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      var curve0 = this.getQuadraticBezierCurve(p00, p01, p02, ratio);\n      var curve1 = this.getQuadraticBezierCurve(p10, p11, p12, ratio);\n      return [// Top Bezier curve\n      [curve0.p0.x, curve0.p0.y, 'M'], [curve0.p1.x, curve0.p1.y, 'Q'], [curve0.p2.x, curve0.p2.y, ''], // Right line\n      [curve1.p2.x, curve1.p2.y, 'L'], // Bottom Bezier curve\n      [curve1.p2.x, curve1.p2.y, 'M'], [curve1.p1.x, curve1.p1.y, 'Q'], [curve1.p0.x, curve1.p0.y, ''], // Left line\n      [curve0.p0.x, curve0.p0.y, 'L']];\n    }\n    /**\n     * @param {Object} p0\n     * @param {Object} p1\n     * @param {Object} p2\n     * @param {Number} t\n     *\n     * @return {Object}\n     */\n\n  }, {\n    key: \"getQuadraticBezierCurve\",\n    value: function getQuadraticBezierCurve(p0, p1, p2) {\n      var t = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n      // Quadratic Bezier curve syntax: M(P0) Q(P1) P2\n      // Where P0, P2 are the curve endpoints and P1 is the control point\n      // More generally, at 0 <= t <= 1, we have the following:\n      // Q0(t), which varies linearly from P0 to P1\n      // Q1(t), which varies linearly from P1 to P2\n      // B(t), which is interpolated linearly between Q0(t) and Q1(t)\n      // For an intermediate curve at 0 <= t <= 1:\n      // P1(t) = Q0(t)\n      // P2(t) = B(t)\n      return {\n        p0: p0,\n        p1: {\n          x: this.getLinearInterpolation(p0, p1, t, 'x'),\n          y: this.getLinearInterpolation(p0, p1, t, 'y')\n        },\n        p2: {\n          x: this.getQuadraticInterpolation(p0, p1, p2, t, 'x'),\n          y: this.getQuadraticInterpolation(p0, p1, p2, t, 'y')\n        }\n      };\n    }\n    /**\n     * @param {Object} p0\n     * @param {Object} p1\n     * @param {Number} t\n     * @param {string} axis\n     *\n     * @return {Number}\n     */\n\n  }, {\n    key: \"getLinearInterpolation\",\n    value: function getLinearInterpolation(p0, p1, t, axis) {\n      return p0[axis] + t * (p1[axis] - p0[axis]);\n    }\n    /**\n     * @param {Object} p0\n     * @param {Object} p1\n     * @param {Object} p2\n     * @param {Number} t\n     * @param {string} axis\n     *\n     * @return {Number}\n     */\n\n  }, {\n    key: \"getQuadraticInterpolation\",\n    value: function getQuadraticInterpolation(p0, p1, p2, t, axis) {\n      return Math.pow(1 - t, 2) * p0[axis] + 2 * (1 - t) * t * p1[axis] + Math.pow(t, 2) * p2[axis];\n    }\n    /**\n     * @param {Number}  prevLeftX\n     * @param {Number}  prevRightX\n     * @param {Number}  prevHeight\n     * @param {Number}  nextLeftX\n     * @param {Number}  nextRightX\n     * @param {Number}  nextHeight\n     * @param {Number}  ratio\n     * @param {boolean} isValueOverlay\n     *\n     * @return {Object}\n     */\n\n  }, {\n    key: \"makeStraightPaths\",\n    value: function makeStraightPaths(_ref3) {\n      var prevLeftX = _ref3.prevLeftX,\n          prevRightX = _ref3.prevRightX,\n          prevHeight = _ref3.prevHeight,\n          nextLeftX = _ref3.nextLeftX,\n          nextRightX = _ref3.nextRightX,\n          nextHeight = _ref3.nextHeight,\n          ratio = _ref3.ratio;\n      var isValueOverlay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (isValueOverlay) {\n        var lengthTop = prevRightX - prevLeftX;\n        var lengthBtm = nextRightX - nextLeftX;\n        var rightSideTop = lengthTop * (ratio || 0) + prevLeftX;\n        var rightSideBtm = lengthBtm * (ratio || 0) + nextLeftX; // Overlay should not be longer than the max length of the path\n\n        rightSideTop = Math.min(rightSideTop, lengthTop);\n        rightSideBtm = Math.min(rightSideBtm, lengthBtm);\n        return [// Start position\n        [prevLeftX, prevHeight, 'M'], // Move to right\n        [rightSideTop, prevHeight, 'L'], // Move down\n        [rightSideBtm, nextHeight, 'L'], // Move to left\n        [nextLeftX, nextHeight, 'L'], // Wrap back to top\n        [prevLeftX, prevHeight, 'L']];\n      }\n\n      return [// Start position\n      [prevLeftX, prevHeight, 'M'], // Move to right\n      [prevRightX, prevHeight, 'L'], // Move down\n      [nextRightX, nextHeight, 'L'], // Move to left\n      [nextLeftX, nextHeight, 'L'], // Wrap back to top\n      [prevLeftX, prevHeight, 'L']];\n    }\n  }]);\n\n  return Navigator;\n}();\n\n/* harmony default export */ __nested_webpack_exports__[\"default\"] = (Navigator);\n\n/***/ }),\n/* 95 */\n/***/ (function(__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_192321__) {\n\n\"use strict\";\n__nested_webpack_require_192321__.r(__nested_webpack_exports__);\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nvar Utils = /*#__PURE__*/function () {\n  function Utils() {\n    _classCallCheck(this, Utils);\n  }\n\n  _createClass(Utils, null, [{\n    key: \"isExtendableObject\",\n    value:\n    /**\n     * Determine whether the given parameter is an extendable object.\n     *\n     * @param {*} a\n     *\n     * @return {boolean}\n     */\n    function isExtendableObject(a) {\n      return _typeof(a) === 'object' && a !== null && !Array.isArray(a);\n    }\n    /**\n     * Extends an object with the members of another.\n     *\n     * @param {Object} a The object to be extended.\n     * @param {Object} b The object to clone from.\n     *\n     * @return {Object}\n     */\n\n  }, {\n    key: \"extend\",\n    value: function extend(a, b) {\n      var result = {}; // If a is non-trivial, extend the result with it\n\n      if (Object.keys(a).length > 0) {\n        result = Utils.extend({}, a);\n      } // Copy over the properties in b into a\n\n\n      Object.keys(b).forEach(function (prop) {\n        if (Utils.isExtendableObject(b[prop])) {\n          if (Utils.isExtendableObject(a[prop])) {\n            result[prop] = Utils.extend(a[prop], b[prop]);\n          } else {\n            result[prop] = Utils.extend({}, b[prop]);\n          }\n        } else {\n          result[prop] = b[prop];\n        }\n      });\n      return result;\n    }\n    /**\n     * Convert the legacy block array to a block object.\n     *\n     * @param {Array} block\n     *\n     * @returns {Object}\n     */\n\n  }, {\n    key: \"convertLegacyBlock\",\n    value: function convertLegacyBlock(block) {\n      return {\n        label: block[0],\n        value: Utils.getRawBlockCount(block),\n        formattedValue: Array.isArray(block[1]) ? block[1][1] : null,\n        backgroundColor: block[2],\n        labelColor: block[3]\n      };\n    }\n    /**\n     * Given a raw data block, return its count.\n     *\n     * @param {Array} block\n     *\n     * @return {Number}\n     */\n\n  }, {\n    key: \"getRawBlockCount\",\n    value: function getRawBlockCount(block) {\n      if (Array.isArray(block)) {\n        return Array.isArray(block[1]) ? block[1][0] : block[1];\n      }\n\n      return block.value;\n    }\n  }]);\n\n  return Utils;\n}();\n\n/* harmony default export */ __nested_webpack_exports__[\"default\"] = (Utils);\n\n/***/ }),\n/* 96 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_195809__) {\n\n\"use strict\";\n__nested_webpack_require_195809__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_195809__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony import */ var _selection_index_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_195809__(4);\n\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(selector) {\n  return typeof selector === \"string\"\n      ? new _selection_index_js__WEBPACK_IMPORTED_MODULE_0__.Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new _selection_index_js__WEBPACK_IMPORTED_MODULE_0__.Selection([[selector]], _selection_index_js__WEBPACK_IMPORTED_MODULE_0__.root);\n}\n\n\n/***/ }),\n/* 97 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_196687__) {\n\n\"use strict\";\n__nested_webpack_require_196687__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_196687__.d(__nested_webpack_exports__, {\n/* harmony export */   \"nanoid\": function() { return /* binding */ nanoid; },\n/* harmony export */   \"customAlphabet\": function() { return /* binding */ customAlphabet; },\n/* harmony export */   \"customRandom\": function() { return /* binding */ customRandom; },\n/* harmony export */   \"urlAlphabet\": function() { return /* reexport safe */ _url_alphabet_index_js__WEBPACK_IMPORTED_MODULE_0__.urlAlphabet; },\n/* harmony export */   \"random\": function() { return /* binding */ random; }\n/* harmony export */ });\n/* harmony import */ var _url_alphabet_index_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_196687__(98);\n\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\n\n\n\n/***/ }),\n/* 98 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_198519__) {\n\n\"use strict\";\n__nested_webpack_require_198519__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_198519__.d(__nested_webpack_exports__, {\n/* harmony export */   \"urlAlphabet\": function() { return /* binding */ urlAlphabet; }\n/* harmony export */ });\nlet urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n\n\n\n/***/ }),\n/* 99 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_198962__) {\n\n\"use strict\";\n__nested_webpack_require_198962__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_198962__.d(__nested_webpack_exports__, {\n/* harmony export */   \"linear\": function() { return /* binding */ linear; }\n/* harmony export */ });\nconst linear = t => +t;\n\n\n/***/ }),\n/* 100 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_199332__) {\n\n\"use strict\";\n__nested_webpack_require_199332__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_199332__.d(__nested_webpack_exports__, {\n/* harmony export */   \"implicit\": function() { return /* binding */ implicit; },\n/* harmony export */   \"default\": function() { return /* binding */ ordinal; }\n/* harmony export */ });\n/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_199332__(101);\n/* harmony import */ var _init_js__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_199332__(102);\n\n\n\nconst implicit = Symbol(\"implicit\");\n\nfunction ordinal() {\n  var index = new d3_array__WEBPACK_IMPORTED_MODULE_0__.InternMap(),\n      domain = [],\n      range = [],\n      unknown = implicit;\n\n  function scale(d) {\n    let i = index.get(d);\n    if (i === undefined) {\n      if (unknown !== implicit) return unknown;\n      index.set(d, i = domain.push(d) - 1);\n    }\n    return range[i % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = new d3_array__WEBPACK_IMPORTED_MODULE_0__.InternMap();\n    for (const value of _) {\n      if (index.has(value)) continue;\n      index.set(value, domain.push(value) - 1);\n    }\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal(domain, range).unknown(unknown);\n  };\n\n  _init_js__WEBPACK_IMPORTED_MODULE_1__.initRange.apply(scale, arguments);\n\n  return scale;\n}\n\n\n/***/ }),\n/* 101 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_201053__) {\n\n\"use strict\";\n__nested_webpack_require_201053__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_201053__.d(__nested_webpack_exports__, {\n/* harmony export */   \"InternMap\": function() { return /* binding */ InternMap; },\n/* harmony export */   \"InternSet\": function() { return /* binding */ InternSet; }\n/* harmony export */ });\nclass InternMap extends Map {\n  constructor(entries, key = keyof) {\n    super();\n    Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});\n    if (entries != null) for (const [key, value] of entries) this.set(key, value);\n  }\n  get(key) {\n    return super.get(intern_get(this, key));\n  }\n  has(key) {\n    return super.has(intern_get(this, key));\n  }\n  set(key, value) {\n    return super.set(intern_set(this, key), value);\n  }\n  delete(key) {\n    return super.delete(intern_delete(this, key));\n  }\n}\n\nclass InternSet extends Set {\n  constructor(values, key = keyof) {\n    super();\n    Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});\n    if (values != null) for (const value of values) this.add(value);\n  }\n  has(value) {\n    return super.has(intern_get(this, value));\n  }\n  add(value) {\n    return super.add(intern_set(this, value));\n  }\n  delete(value) {\n    return super.delete(intern_delete(this, value));\n  }\n}\n\nfunction intern_get({_intern, _key}, value) {\n  const key = _key(value);\n  return _intern.has(key) ? _intern.get(key) : value;\n}\n\nfunction intern_set({_intern, _key}, value) {\n  const key = _key(value);\n  if (_intern.has(key)) return _intern.get(key);\n  _intern.set(key, value);\n  return value;\n}\n\nfunction intern_delete({_intern, _key}, value) {\n  const key = _key(value);\n  if (_intern.has(key)) {\n    value = _intern.get(key);\n    _intern.delete(key);\n  }\n  return value;\n}\n\nfunction keyof(value) {\n  return value !== null && typeof value === \"object\" ? value.valueOf() : value;\n}\n\n\n/***/ }),\n/* 102 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_203050__) {\n\n\"use strict\";\n__nested_webpack_require_203050__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_203050__.d(__nested_webpack_exports__, {\n/* harmony export */   \"initRange\": function() { return /* binding */ initRange; },\n/* harmony export */   \"initInterpolator\": function() { return /* binding */ initInterpolator; }\n/* harmony export */ });\nfunction initRange(domain, range) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.range(domain); break;\n    default: this.range(range).domain(domain); break;\n  }\n  return this;\n}\n\nfunction initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: {\n      if (typeof domain === \"function\") this.interpolator(domain);\n      else this.range(domain);\n      break;\n    }\n    default: {\n      this.domain(domain);\n      if (typeof interpolator === \"function\") this.interpolator(interpolator);\n      else this.range(interpolator);\n      break;\n    }\n  }\n  return this;\n}\n\n\n/***/ }),\n/* 103 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_204128__) {\n\n\"use strict\";\n__nested_webpack_require_204128__.r(__nested_webpack_exports__);\n/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_204128__(104);\n\n\n/* harmony default export */ __nested_webpack_exports__[\"default\"] = ((0,_colors_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\"));\n\n\n/***/ }),\n/* 104 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_204585__) {\n\n\"use strict\";\n__nested_webpack_require_204585__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_204585__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* export default binding */ __WEBPACK_DEFAULT_EXPORT__; }\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n\n\n/***/ }),\n/* 105 */\n/***/ (function(__unused_webpack___webpack_module__, __nested_webpack_exports__, __nested_webpack_require_205197__) {\n\n\"use strict\";\n__nested_webpack_require_205197__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_205197__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ range; }\n/* harmony export */ });\nfunction range(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n\n\n/***/ })\n/******/ \t]);\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __nested_webpack_require_206012__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __nested_webpack_require_206012__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t!function() {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__nested_webpack_require_206012__.d = function(exports, definition) {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__nested_webpack_require_206012__.o(definition, key) && !__nested_webpack_require_206012__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t}();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t!function() {\n/******/ \t\t__nested_webpack_require_206012__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }\n/******/ \t}();\n/******/ \t\n/******/ \t/* webpack/runtime/make namespace object */\n/******/ \t!function() {\n/******/ \t\t// define __esModule on exports\n/******/ \t\t__nested_webpack_require_206012__.r = function(exports) {\n/******/ \t\t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t\t}\n/******/ \t\t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t\t};\n/******/ \t}();\n/******/ \t\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module used 'module' so it can't be inlined\n/******/ \tvar __nested_webpack_exports__ = __nested_webpack_require_206012__(0);\n/******/ \t\n/******/ \treturn __nested_webpack_exports__;\n/******/ })()\n;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/d3-funnel/dist/d3-funnel.js\n");

/***/ })

};
;